[{"/home/rasmus/Documents/Coding/swift-writer/src/index.js":"1","/home/rasmus/Documents/Coding/swift-writer/src/App.js":"2","/home/rasmus/Documents/Coding/swift-writer/src/reportWebVitals.js":"3","/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/MainNavigation.jsx":"4","/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/PrimaryButton/PrimaryButton.jsx":"5","/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/SecondaryButton/SecondaryButton.jsx":"6","/home/rasmus/Documents/Coding/swift-writer/src/contexts/LanguageContext.js":"7","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/SignUpPage/SignUpPage.jsx":"8","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickContestPage/QuickContestPage.jsx":"9","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickPractisePage/QuickPractisePage.jsx":"10","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/SignInPage/SignInPage.jsx":"11","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/FeedbackPage/FeedbackPage.jsx":"12","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickContestPage/QuickContestSettings/QuickContestSettings.jsx":"13","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickPractisePage/QuckPractiseSettings/QuckPractiseSettings.jsx":"14","/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/LeftHand/LeftHand.jsx":"15","/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/RightHand/RightHand.jsx":"16","/home/rasmus/Documents/Coding/swift-writer/src/components/Keyboards/Swedish/Windows/SweWinKeyboard.jsx":"17","/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/FingerIndicator/FingerIndicator.jsx":"18","/home/rasmus/Documents/Coding/swift-writer/src/utility/findStopsInText.js":"19","/home/rasmus/Documents/Coding/swift-writer/src/utility/wordsPerMinToUpdateTime.js":"20","/home/rasmus/Documents/Coding/swift-writer/src/components/common/TextMarker/TextMarker.jsx":"21","/home/rasmus/Documents/Coding/swift-writer/src/components/common/Checkbox/Checkbox.jsx":"22","/home/rasmus/Documents/Coding/swift-writer/src/components/common/Checkboxes/Checkboxes.jsx":"23","/home/rasmus/Documents/Coding/swift-writer/src/components/common/Slider/CustomSlider1.jsx":"24","/home/rasmus/Documents/Coding/swift-writer/src/components/common/RadioButton/RadioButton.jsx":"25","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/FormContainer/FormContainer.jsx":"26","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/ShortTextInput/ShortTextInput.jsx":"27","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/HomePage.jsx":"28","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/KeyboardContainer/KeyboardContainer.jsx":"29","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/WelcomeAnimation/WelcomeAnimation.jsx":"30","/home/rasmus/Documents/Coding/swift-writer/src/components/KeyBoard/Keyboard.jsx":"31","/home/rasmus/Documents/Coding/swift-writer/src/components/KeyBoard/Key/Key.jsx":"32","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/Divider/Divider.jsx":"33","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/formButtons/GoogleAuthButton/GoogleAuthButton.jsx":"34","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/formButtons/SubmitButton/SubmitButton.jsx":"35","/home/rasmus/Documents/Coding/swift-writer/src/utility/sliderStyles.js":"36","/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/TestButton.jsx":"37","/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/CustomButton.jsx":"38","/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/DesktopNavigation/DesktopNavigation.jsx":"39","/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/MobileNavigation/MobileNavigation.jsx":"40","/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/NewKeyboard.jsx":"41","/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/keys/SmallKey/SmallKey.jsx":"42","/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/KeyboardRow/KeyboardRow.jsx":"43","/home/rasmus/Documents/Coding/swift-writer/src/components/common/HeaderAnimation/HeaderAnimation.jsx":"44","/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/keys/MediumKey/MediumKey.jsx":"45"},{"size":1018,"mtime":1629362460746,"results":"46","hashOfConfig":"47"},{"size":1879,"mtime":1629362904224,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":1629361281635,"results":"49","hashOfConfig":"47"},{"size":739,"mtime":1629468810972,"results":"50","hashOfConfig":"47"},{"size":941,"mtime":1629378974457,"results":"51","hashOfConfig":"47"},{"size":1030,"mtime":1629378838973,"results":"52","hashOfConfig":"47"},{"size":794,"mtime":1629361281599,"results":"53","hashOfConfig":"47"},{"size":2700,"mtime":1629389832094,"results":"54","hashOfConfig":"47"},{"size":780,"mtime":1629802004492,"results":"55","hashOfConfig":"47"},{"size":985,"mtime":1629802124703,"results":"56","hashOfConfig":"47"},{"size":1951,"mtime":1629802128795,"results":"57","hashOfConfig":"47"},{"size":692,"mtime":1629843983429,"results":"58","hashOfConfig":"47"},{"size":3150,"mtime":1629363386219,"results":"59","hashOfConfig":"47"},{"size":9128,"mtime":1629363292020,"results":"60","hashOfConfig":"47"},{"size":1710,"mtime":1629363253044,"results":"61","hashOfConfig":"47"},{"size":1715,"mtime":1629380256210,"results":"62","hashOfConfig":"47"},{"size":7339,"mtime":1629846308152,"results":"63","hashOfConfig":"47"},{"size":1606,"mtime":1629361281595,"results":"64","hashOfConfig":"47"},{"size":241,"mtime":1629362323827,"results":"65","hashOfConfig":"47"},{"size":534,"mtime":1629362324038,"results":"66","hashOfConfig":"47"},{"size":539,"mtime":1629361281595,"results":"67","hashOfConfig":"47"},{"size":968,"mtime":1629361281591,"results":"68","hashOfConfig":"47"},{"size":325,"mtime":1629361281591,"results":"69","hashOfConfig":"47"},{"size":937,"mtime":1629363280636,"results":"70","hashOfConfig":"47"},{"size":1348,"mtime":1629361281595,"results":"71","hashOfConfig":"47"},{"size":1182,"mtime":1629362944272,"results":"72","hashOfConfig":"47"},{"size":617,"mtime":1629361281595,"results":"73","hashOfConfig":"47"},{"size":4962,"mtime":1629387863989,"results":"74","hashOfConfig":"47"},{"size":3169,"mtime":1629361281599,"results":"75","hashOfConfig":"47"},{"size":716,"mtime":1629362994335,"results":"76","hashOfConfig":"47"},{"size":1149,"mtime":1629392363677,"results":"77","hashOfConfig":"47"},{"size":6056,"mtime":1629363141888,"results":"78","hashOfConfig":"47"},{"size":334,"mtime":1629361281595,"results":"79","hashOfConfig":"47"},{"size":440,"mtime":1629389867162,"results":"80","hashOfConfig":"47"},{"size":271,"mtime":1629389940957,"results":"81","hashOfConfig":"47"},{"size":566,"mtime":1629362323998,"results":"82","hashOfConfig":"47"},{"size":476,"mtime":1629361281591,"results":"83","hashOfConfig":"47"},{"size":294,"mtime":1629361281591,"results":"84","hashOfConfig":"47"},{"size":1488,"mtime":1629468069429,"results":"85","hashOfConfig":"47"},{"size":210,"mtime":1629467943569,"results":"86","hashOfConfig":"47"},{"size":9779,"mtime":1629902652298,"results":"87","hashOfConfig":"47"},{"size":810,"mtime":1629899663315,"results":"88","hashOfConfig":"47"},{"size":350,"mtime":1629900246805,"results":"89","hashOfConfig":"47"},{"size":1343,"mtime":1629801952853,"results":"90","hashOfConfig":"47"},{"size":380,"mtime":1629899618755,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"4q3q7g",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"94"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rasmus/Documents/Coding/swift-writer/src/index.js",[],["201","202"],"/home/rasmus/Documents/Coding/swift-writer/src/App.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/reportWebVitals.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/MainNavigation.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/PrimaryButton/PrimaryButton.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/SecondaryButton/SecondaryButton.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/contexts/LanguageContext.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/pages/SignUpPage/SignUpPage.jsx",["203"],"import React, { useState, useEffect } from \"react\";\nimport classes from \"./signUpPage.module.scss\";\n\nimport findStopsInText from \"../../../utility/findStopsInText\";\nimport wordsPerMinToUpdateTime from \"../../../utility/wordsPerMinToUpdateTime\";\n\nimport TextMarker from \"../../common/TextMarker/TextMarker\";\n\nimport SignUpForm from \"../../common/forms/FormContainer/FormContainer\";\nimport EmailInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\nimport UsernameInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\nimport PasswordInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\nimport RepeatPasswordInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\nimport SubmitButton from \"../../common/forms/formButtons/SubmitButton/SubmitButton\";\nimport OrDivider from \"../../common/forms/Divider/Divider\";\nimport GoogleSignUpButton from \"../../common/forms/formButtons/GoogleAuthButton/GoogleAuthButton\";\n\nconst SignUpPage = () => {\n\tconst fullHeaderText = \"Sign Up\";\n\tconst updateTime = wordsPerMinToUpdateTime(75, fullHeaderText);\n\n\tconst [headerText, setHeaderText] = useState(\" \");\n\tconst [stops, setStops] = useState(findStopsInText(fullHeaderText));\n\tconst [charIdx, setCharIdx] = useState(0);\n\tconst [animationFinished, setAnimationFinished] = useState(false);\n\tconst [showContent, setShowContent] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tif (stops.includes(charIdx)) {\n\t\t\t\tlet tempStops = [...stops];\n\t\t\t\ttempStops.shift();\n\t\t\t\tsetStops(tempStops);\n\t\t\t} else if (charIdx < fullHeaderText.length) {\n\t\t\t\tlet newChar = fullHeaderText.charAt(charIdx);\n\n\t\t\t\tif (charIdx === 0) {\n\t\t\t\t\tsetHeaderText(newChar);\n\t\t\t\t} else {\n\t\t\t\t\tsetHeaderText(headerText.concat(newChar));\n\t\t\t\t}\n\n\t\t\t\tsetCharIdx(charIdx + 1);\n\t\t\t} else {\n\t\t\t\tsetAnimationFinished(true);\n\t\t\t}\n\t\t}, updateTime);\n\n\t\tsetShowContent(true);\n\t}, [charIdx, stops]);\n\n\treturn (\n\t\t<div className={classes.SignUpPageContainer}>\n\t\t\t<div className={classes.SignUpPage}>\n\t\t\t\t<h1>\n\t\t\t\t\t{headerText}\n\t\t\t\t\t<TextMarker hide={animationFinished} />\n\t\t\t\t</h1>\n\n\t\t\t\t<SignUpForm show={showContent}>\n\t\t\t\t\t<EmailInput inputName=\"Email\" />\n\t\t\t\t\t<UsernameInput inputName=\"Username\" />\n\t\t\t\t\t<PasswordInput inputName=\"Password\" inputType=\"password\" />\n\t\t\t\t\t<RepeatPasswordInput\n\t\t\t\t\t\tinputName=\"Repeat Password\"\n\t\t\t\t\t\tinputType=\"password\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SubmitButton\n\t\t\t\t\t\ttext=\"Create free account\"\n\t\t\t\t\t\t// onChange = {e => e.preventDefault()}\n\t\t\t\t\t/>\n\t\t\t\t\t<OrDivider text=\"or\" />\n\t\t\t\t\t<GoogleSignUpButton\n\t\t\t\t\t\ttext=\"Sign up with Google\"\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tconsole.log(\"User wants to sign up with Google!\")\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</SignUpForm>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SignUpPage;\n","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickContestPage/QuickContestPage.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickPractisePage/QuickPractisePage.jsx",["204","205","206","207"],"import React, { useEffect, useState } from \"react\";\nimport classes from \"./quickPractisePage.module.scss\";\n\nimport findStopsInText from \"../../../utility/findStopsInText\";\nimport wordsPerMinToUpdateTime from \"../../../utility/wordsPerMinToUpdateTime\";\n\nimport TextMarker from \"../../common/TextMarker/TextMarker\";\nimport QuickPractiseSettings from \"./QuckPractiseSettings/QuckPractiseSettings\";\nimport HeaderAnimation from \"../../common/HeaderAnimation/HeaderAnimation\";\n\nconst QuickPractisePage = () => {\n\tconst [showContent, setShowContent] = useState(false);\n\n\tconst showContentHandler = (newShowContent) => {\n\t\tsetShowContent(newShowContent);\n\t};\n\n\treturn (\n\t\t<div className={classes.QuickPractisePageContainer}>\n\t\t\t<div className={classes.QuickPractisePage}>\n\t\t\t\t<HeaderAnimation\n\t\t\t\t\theaderText=\"Quick Practice\"\n\t\t\t\t\tshowContentHandler={showContentHandler}\n\t\t\t\t/>\n\n\t\t\t\t<QuickPractiseSettings showForm={showContent} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default QuickPractisePage;\n","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/SignInPage/SignInPage.jsx",["208","209","210","211","212","213","214"],"import React, { useState, useEffect } from \"react\";\nimport classes from \"./signInPage.module.scss\";\nimport SWLogo from \"../../../resources/icons/SWLogo.svg\";\n\nimport findStopsInText from \"../../../utility/findStopsInText\";\nimport wordsPerMinToUpdateTime from \"../../../utility/wordsPerMinToUpdateTime\";\n\nimport TextMarker from \"../../common/TextMarker/TextMarker\";\n\nimport SignInForm from \"../../common/forms/FormContainer/FormContainer\";\nimport EmailInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\nimport UsernameInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\nimport PasswordInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\nimport RepeatPasswordInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\nimport SubmitButton from \"../../common/forms/formButtons/SubmitButton/SubmitButton\";\nimport OrDivider from \"../../common/forms/Divider/Divider\";\nimport GoogleSignUpButton from \"../../common/forms/formButtons/GoogleAuthButton/GoogleAuthButton\";\nimport HeaderAnimation from \"../../common/HeaderAnimation/HeaderAnimation\";\n\nconst SignUpPage = () => {\n\tconst [showContent, setShowContent] = useState(false);\n\n\tconst showContentHandler = (newShowContent) => {\n\t\tsetShowContent(newShowContent);\n\t};\n\n\treturn (\n\t\t<div className={classes.SignInPageContainer}>\n\t\t\t<div className={classes.SignInPage}>\n\t\t\t\t<HeaderAnimation\n\t\t\t\t\theaderText=\"Quick Contest\"\n\t\t\t\t\tshowContentHandler={showContentHandler}\n\t\t\t\t/>\n\n\t\t\t\t<SignInForm show={showContent}>\n\t\t\t\t\t<EmailInput inputName=\"Email or Username\" />\n\t\t\t\t\t<PasswordInput inputName=\"Password\" inputType=\"password\" />\n\n\t\t\t\t\t<SubmitButton\n\t\t\t\t\t\ttext=\"Sign in\"\n\t\t\t\t\t\t// onChange = {e => e.preventDefault()}\n\t\t\t\t\t/>\n\t\t\t\t\t<OrDivider text=\"or\" />\n\t\t\t\t\t<GoogleSignUpButton\n\t\t\t\t\t\ttext=\"Sign in with Google\"\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tconsole.log(\"User wants to sign in with Google!\")\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</SignInForm>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SignUpPage;\n","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/FeedbackPage/FeedbackPage.jsx",["215"],"import React, { useState } from \"react\";\nimport classes from \"./feedbackPage.module.scss\";\n\nimport NewKeyboard from \"../../common/NewKeyboard/NewKeyboard\";\nimport HeaderAnimation from \"../../common/HeaderAnimation/HeaderAnimation\";\n\nconst FeedbackPage = () => {\n\tconst [showContent, setShowContent] = useState(false);\n\n\tconst showContentHandler = (newShowContent) => {\n\t\tsetShowContent(newShowContent);\n\t};\n\n\treturn (\n\t\t<div className={classes.FeedbackPageContainer}>\n\t\t\t<div className={classes.FeedbackPage}>\n\t\t\t\t<HeaderAnimation\n\t\t\t\t\theaderText=\"Give Feedback\"\n\t\t\t\t\tshowContentHandler={showContentHandler}\n\t\t\t\t/>\n\n\t\t\t\t<NewKeyboard />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default FeedbackPage;\n","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickContestPage/QuickContestSettings/QuickContestSettings.jsx",["216","217"],"import React, { useState } from 'react';\nimport classes from './quickContestSettings.module.scss';\n\nimport QuickContestForm from '../../../common/forms/FormContainer/FormContainer';\nimport TypeOfContestRadioButtons from '../../../common/Checkboxes/Checkboxes';\nimport RadioButton from '../../../common/RadioButton/RadioButton';\nimport StartContestButton from '../../../common/forms/formButtons/SubmitButton/SubmitButton';\n\nconst QuickContestSettings = ({showForm}) => {\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\n    const [typeOfContest, setTypeOfContest] = useState({\n        \"Standard\": true,\n        \"With friends\": false\n    })\n    const [contestMode, setContestMode] = useState({\n        \"Ranked\": false,\n        \"Casual\": true\n    });\n    \n\n    const typeOfContestHandler = (newContestType) => {\n        let tempTypeOfContest = {...typeOfContest};\n        let typeOfContestKeys = Object.keys(tempTypeOfContest);\n\n        typeOfContestKeys.forEach(contestType => {\n            tempTypeOfContest[contestType] = false\n        })\n\n        tempTypeOfContest[newContestType] = true;\n        setTypeOfContest(tempTypeOfContest);\n    }\n\n    const contestModeHandler = (newContestMode) => {\n        if (userLoggedIn) {\n            let tempContestMode = {...contestMode};\n            let contestModeKeys = Object.keys(tempContestMode);\n    \n            contestModeKeys.forEach(contestMode => {\n                tempContestMode[contestMode] = false\n            })\n    \n            tempContestMode[newContestMode] = true;\n            setContestMode(tempContestMode);\n        }\n    }\n\n    return (\n        <QuickContestForm \n            show = {showForm}\n            width = \"290px\"\n        >\n            <TypeOfContestRadioButtons title=\"Type of contest\">\n                <RadioButton \n                    name = 'Standard'\n                    isChecked = {typeOfContest['Standard']}\n                    checkboxHandler = {typeOfContestHandler}\n                    colorTheme = \"light\"\n                />\n\n                <RadioButton \n                    name = 'With friends'\n                    isChecked = {typeOfContest['With friends']}\n                    checkboxHandler = {typeOfContestHandler}\n                    colorTheme = \"light\"\n                />\n            </TypeOfContestRadioButtons>\n\n            <TypeOfContestRadioButtons title=\"Contest mode\">\n                <RadioButton \n                    name = 'Ranked'\n                    isChecked = {contestMode['Ranked']}\n                    checkboxHandler = {contestModeHandler}\n                    colorTheme = \"light\"\n                    disableMsg = \"Log in required\"\n                    disable = {true}\n                />\n\n                <RadioButton \n                    name = 'Casual'\n                    isChecked = {contestMode['Casual']}\n                    checkboxHandler = {contestModeHandler}\n                    colorTheme = \"light\"\n                />\n            </TypeOfContestRadioButtons>\n\n            <StartContestButton\n                text = \"Start contest\"\n            />\n        </QuickContestForm>\n    )\n}\n\nexport default QuickContestSettings;","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickPractisePage/QuckPractiseSettings/QuckPractiseSettings.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/LeftHand/LeftHand.jsx",["218"],"import React from 'react';\nimport classes from './leftHand.module.scss';\n\nimport leftHandImg from '../../../resources/images/leftHand.png';\nimport FingerIndicator from '../FingerIndicator/FingerIndicator';\n\nconst LeftHand = ({highlightedFingers, updateTime, extraClass}) => {\n    let handClasses = [classes.LeftHand];\n\n    if (extraClass !== undefined) {\n        handClasses.push(extraClass);\n    }\n\n    return (\n        <div className={handClasses.join(\" \")}>\n            <FingerIndicator \n                color=\"red\" \n                top = \"50px\"\n                left = \"-11px\"\n                show = {highlightedFingers[\"pinkyL\"]}\n                updateTime = {updateTime}\n            />\n\n            <FingerIndicator \n                color=\"blue\" \n                top = \"-2px\"\n                left = \"28px\"\n                show = {highlightedFingers[\"ringL\"]}\n                updateTime = {updateTime}\n            />\n\n            <FingerIndicator \n                color=\"orange\" \n                top = \"-10px\"\n                left = \"72px\"\n                show = {highlightedFingers[\"middleL\"]}\n                updateTime = {updateTime}\n            />\n\n            <FingerIndicator \n                color=\"green\" \n                top = \"0px\"\n                left = \"116px\"\n                show = {highlightedFingers[\"indexL\"]}\n                updateTime = {updateTime}\n            />\n\n            <FingerIndicator \n                color=\"purple\" \n                top = \"100px\"\n                left = \"175px\"\n                show = {highlightedFingers[\"thumbL\"]}\n                updateTime = {updateTime}\n            />\n\n            <img src={leftHandImg} />\n        </div>\n    )\n}\n\nexport default LeftHand;","/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/RightHand/RightHand.jsx",["219"],"import React from 'react';\nimport classes from './rightHand.module.scss';\nimport rightHandImg from '../../../resources/images/rightHand.png';\n\nimport FingerIndicator from '../FingerIndicator/FingerIndicator';\n\nconst RightHand = ({highlightedFingers, updateTime, extraClass}) => {\n    let handClasses = [classes.RightHand];\n\n    if (extraClass !== undefined) {\n        handClasses.push(extraClass);\n    }\n    return (\n        <div className={handClasses.join(\" \")}>\n            <FingerIndicator \n                color=\"purple\" \n                top = \"98px\"\n                left = \"-9px\"\n                show = {highlightedFingers[\"thumbR\"]}\n                updateTime = {updateTime}\n            />\n\n            <FingerIndicator \n                color=\"red\" \n                top = \"-2px\"\n                left = \"51px\"\n                show = {highlightedFingers[\"indexR\"]}\n                updateTime = {updateTime}\n            />\n\n            <FingerIndicator \n                color=\"blue\" \n                top = \"-10px\"\n                left = \"95px\"\n                show = {highlightedFingers[\"middleR\"]}\n                updateTime = {updateTime}\n            />\n\n            <FingerIndicator \n                color=\"orange\" \n                top = \"-1px\"\n                left = \"139px\"\n                show = {highlightedFingers[\"ringR\"]}\n                updateTime = {updateTime}\n            />\n\n            <FingerIndicator \n                color=\"green\" \n                top = \"50px\"\n                left = \"178px\"\n                show = {highlightedFingers[\"pinkyR\"]}\n                updateTime = {updateTime}\n            />\n\n            <img src={rightHandImg} />\n        </div>\n    )\n}\n\nexport default RightHand;","/home/rasmus/Documents/Coding/swift-writer/src/components/Keyboards/Swedish/Windows/SweWinKeyboard.jsx",["220"],"import React from \"react\";\nimport classes from \"./sweWinKeyboard.module.scss\";\n\nimport Keyboard from \"../../../KeyBoard/Keyboard\";\n\nconst SweWinKeyboard = ({\n\tkeyEnter,\n\tkeyLeave,\n\tclearIndicators,\n\tactiveKey,\n\tupdateTime,\n\tallKeysActive,\n\textraClass,\n}) => {\n\tconst defaultWidth = \"50px\";\n\tlet sweWinKeys = [\n\t\t[\n\t\t\t{\n\t\t\t\tchar: \"§\",\n\t\t\t\tshiftChar: \"½\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"1\",\n\t\t\t\tshiftChar: \"!\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"2\",\n\t\t\t\tshiftChar: '\"',\n\t\t\t\taltGrChar: \"@\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"ringL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"3\",\n\t\t\t\tshiftChar: \"#\",\n\t\t\t\taltGrChar: \"£\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"middleL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"4\",\n\t\t\t\tshiftChar: \"¤\",\n\t\t\t\taltGrChar: \"$\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"5\",\n\t\t\t\tshiftChar: \"%\",\n\t\t\t\taltGrChar: \"€\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"6\",\n\t\t\t\tshiftChar: \"&\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"7\",\n\t\t\t\tshiftChar: \"/\",\n\t\t\t\taltGrChar: \"{\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"8\",\n\t\t\t\tshiftChar: \"(\",\n\t\t\t\taltGrChar: \"[\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"middleR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"9\",\n\t\t\t\tshiftChar: \")\",\n\t\t\t\taltGrChar: \"]\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"ringR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"0\",\n\t\t\t\tshiftChar: \"=\",\n\t\t\t\taltGrChar: \"}\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"+\",\n\t\t\t\tshiftChar: \"?\",\n\t\t\t\taltGrChar: \"\\\\\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"´\",\n\t\t\t\tshiftChar: \"`\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"← Back\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"85px\",\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tchar: \"Tab ↹\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"75px\",\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"Q\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"W\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"ringL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"E\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"€\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"middleL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"R\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"T\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"Y\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"U\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"I\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"middleR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"O\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"ringR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"P\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"Å\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"¨\",\n\t\t\t\tshiftChar: \"^\",\n\t\t\t\taltGrChar: \"~\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tchar: \"CapsLock\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"85px\",\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"A\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"S\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"ringL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"D\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"middleL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"F\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"G\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"H\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"J\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"K\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"middleR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"L\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"ringR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"Ö\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"Ä\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"'\",\n\t\t\t\tshiftChar: \"*\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"↲ Enter\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"75px\",\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tchar: \"⇧ Shift\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"75px\",\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"<\",\n\t\t\t\tshiftChar: \">\",\n\t\t\t\taltGrChar: \"|\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"Z\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"X\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"ringL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"C\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"middleL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"V\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"B\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"N\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"M\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"µ\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"indexR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \",\",\n\t\t\t\tshiftChar: \";\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"middleR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \".\",\n\t\t\t\tshiftChar: \":\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"ringR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"-\",\n\t\t\t\tshiftChar: \"_\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: defaultWidth,\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"⇧ Shift\",\n\t\t\t\tshiftChar: \"_\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"85px\",\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tchar: \"Ctrl\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"85px\",\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"win\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"51px\",\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"Alt\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"85px\",\n\t\t\t\tfinger: \"pinkyL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"Space\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"350px\",\n\t\t\t\tfinger: \"thumbR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"Alt Gr\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"85px\",\n\t\t\t\tfinger: \"ringR\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tchar: \"Fn\",\n\t\t\t\tshiftChar: \"\",\n\t\t\t\taltGrChar: \"\",\n\t\t\t\twidth: \"85px\",\n\t\t\t\tfinger: \"pinkyR\",\n\t\t\t},\n\t\t],\n\t];\n\n\treturn (\n\t\t<Keyboard\n\t\t\tkeys={sweWinKeys}\n\t\t\tkeyEnter={keyEnter}\n\t\t\tkeyLeave={keyLeave}\n\t\t\tclearIndicators={clearIndicators}\n\t\t\tactiveKey={activeKey}\n\t\t\tupdateTime={updateTime}\n\t\t\tallKeysActive={allKeysActive}\n\t\t\textraClass={extraClass}\n\t\t/>\n\t);\n};\n\nexport default SweWinKeyboard;\n","/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/FingerIndicator/FingerIndicator.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/utility/findStopsInText.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/utility/wordsPerMinToUpdateTime.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/TextMarker/TextMarker.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/Checkbox/Checkbox.jsx",["221","222"],"import React from 'react';\n\nimport classes from './checkbox.module.scss';\n\nconst Checkbox = ({name, isChecked, checkboxHandler, colorTheme, disable=false}) => {\n    let searchClass;\n\n\n    if (colorTheme == 'dark') {\n        searchClass = classes.darkStyling;\n    } else if (colorTheme == 'light') {\n        searchClass = classes.lightStyling;\n    }\n\n    return (\n        <label \n            className = {searchClass} \n            key = {name}\n            style = {{\n                \"cursor\": disable ? \"default\" : \"pointer\",\n                \"opacity\": disable ? \"0.35\" : \"1\"\n            }}\n        >\n            <input\n                name={name}\n                type=\"checkbox\"\n                checked={isChecked}\n                onChange={() => checkboxHandler(name)}\n            />\n\n            <span className={classes.checkmark}></span>\n            <span className={classes.text}>{name}</span>\n            <br />\n        </label>\n    )\n}\n\nexport default Checkbox;","/home/rasmus/Documents/Coding/swift-writer/src/components/common/Checkboxes/Checkboxes.jsx",["223"],"import React from 'react';\nimport classes from './checkboxes.module.scss';\nimport Checkbox from '../Checkbox/Checkbox';\n\nconst Checkboxes = ({children, title}) => {\n    return (\n        <div className={classes.Checkboxes}>\n            <h4>{title}</h4>\n            {children}\n        </div>\n    )\n}\n\nexport default Checkboxes;","/home/rasmus/Documents/Coding/swift-writer/src/components/common/Slider/CustomSlider1.jsx",["224"],"import React from 'react';\nimport classes from './customSlider1.module.scss';\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Slider from '@material-ui/core/Slider';\nimport { discreteMSlider } from '../../../utility/sliderStyles';\n\nconst PrettoSlider = withStyles(discreteMSlider)(Slider);\n\nconst CustomSlider1 = ({\n    sliderValue, \n    valueChangeHandler, \n    minVal, \n    maxVal, \n    stepSize,\n    sliderWidth = \"100%\",\n    sliderMargin = \"0\"\n}) => {\n\n    return (\n        <PrettoSlider\n            defaultValue={sliderValue}\n            getAriaValueText={valueChangeHandler}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            step={stepSize}\n            marks\n            min={minVal}\n            max={maxVal}\n            style= {{\n                \"width\": sliderWidth,\n                \"margin\": sliderMargin\n            }}\n        />\n    )\n}\n\nexport default CustomSlider1;","/home/rasmus/Documents/Coding/swift-writer/src/components/common/RadioButton/RadioButton.jsx",["225","226"],"import React from 'react';\n\nimport classes from './radioButton.module.scss';\n\nconst Checkbox = ({name, isChecked, checkboxHandler, colorTheme, disable=false, disableMsg=\"\"}) => {\n    let searchClass, \n        textClass = classes.text;\n\n\n    if (colorTheme == 'dark') {\n        searchClass = classes.darkStyling;\n    } else if (colorTheme == 'light') {\n        searchClass = classes.lightStyling;\n    }\n\n    if (isChecked) {\n        textClass = classes.checkedText;\n    }\n\n    return (\n        <div className={classes.radioButtonContainer}>\n            <label \n                className = {searchClass} \n                key = {name}\n                style = {{\n                    \"cursor\": !isChecked && !disable ? \"pointer\" : \"default\",\n                    \"opacity\": disable ? \"0.35\" : \"1\"\n                }}\n            >\n                <input\n                    name={name}\n                    type=\"checkbox\"\n                    checked={isChecked}\n                    onClick={() => checkboxHandler(name)}\n                />\n\n                <span className={classes.checkmark}></span>\n                <span className={textClass}>{name}</span>\n                \n                <br />\n            </label>\n            {disable ? <span className={classes.disableMsg}>{disableMsg}</span> : null}\n        </div>\n    )\n}\n\nexport default Checkbox;","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/FormContainer/FormContainer.jsx",["227","228"],"import React from 'react';\nimport classes from './formContainer.module.scss';\n\nimport SWLogo from '../../../../resources/icons/SWLogo.svg';\n\nconst FormContainer = ({show, children, logo, width=\"auto\"}) => {\n    let formLogo = null;\n\n    if (logo === \"none\") {\n        formLogo = null;\n    } else if (logo !== undefined) {\n        formLogo = <img \n            src={logo} \n            style = {{\n                \"marginBottom\": \"20px\"\n            }}\n        />\n    } else {\n        formLogo = <img \n            src={SWLogo} \n            style = {{\n                \"marginBottom\": \"20px\"\n            }}\n        />\n    }\n\n    let formClasses = [classes.FormContainer];\n\n    if (!show) {\n        formClasses.push(classes.hideForm);\n    }\n\n    if (width !== \"auto\") {\n\n    }\n\n    return (\n        <div \n            className={formClasses.join(\" \")}\n            style = {{\n                \"marginTop\": logo === \"none\" ? \"20px\" : \"60px\",\n                \"paddingTop\": logo === \"none\" ? \"20px\" : \"0\",\n                \"width\": width !== \"auto\" ? width : \"fitContent\"\n            }}\n        >\n            {formLogo}\n\n            {children}\n        </div>\n    )\n}\n\nexport default FormContainer;","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/ShortTextInput/ShortTextInput.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/HomePage.jsx",["229"],"import React, { useState, useEffect } from \"react\";\nimport classes from \"./homePage.module.scss\";\n\nimport Slider from \"@material-ui/core/Slider\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport KeyboardContainer from \"./KeyboardContainer/KeyboardContainer\";\nimport WelcomeAnimation from \"./WelcomeAnimation/WelcomeAnimation\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport PlayIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\n\nimport findStopsInText from \"../../../utility/findStopsInText\";\nimport wordsPerMinToUpdateTime from \"../../../utility/wordsPerMinToUpdateTime\";\n\nconst PrettoSlider = withStyles({\n\troot: {\n\t\tcolor: \"#FE6E6E\",\n\t\theight: 10,\n\t},\n\tthumb: {\n\t\theight: 24,\n\t\twidth: 24,\n\t\tbackgroundColor: \"#fff\",\n\t\tborder: \"3px solid currentColor\",\n\t\tmarginTop: -8,\n\t\tmarginLeft: -12,\n\t\t\"&:focus, &:hover, &$active\": {\n\t\t\tboxShadow: \"inherit\",\n\t\t},\n\t},\n\tactive: {},\n\tvalueLabel: {\n\t\tleft: \"calc(-50% + 2px)\",\n\t},\n\ttrack: {\n\t\theight: 8,\n\t\tborderRadius: 0,\n\t},\n\trail: {\n\t\theight: 8,\n\t\tborderRadius: 0,\n\t},\n})(Slider);\n\nconst HomePage = () => {\n\tconst activateKeyHandler = (keyToActivate) => {\n\t\tsetActiveKey(keyToActivate);\n\t};\n\n\tconst fullWelcomeText =\n\t\t\"Welcome to SwiftWriter - an application made to help you type fast and properly!\";\n\tconst [welcomeText, setWelcomeText] = useState(\" \");\n\tconst [charIdx, setCharIdx] = useState(0);\n\tconst [stops, setStops] = useState(findStopsInText(fullWelcomeText));\n\tconst [wordsPerMinute, setWordsPerMinute] = useState(5);\n\tconst [updateTime, setUpdateTime] = useState(\n\t\twordsPerMinToUpdateTime(wordsPerMinute, fullWelcomeText)\n\t);\n\tconst [activeKey, setActiveKey] = useState();\n\tconst [allKeysActive, setAllKeysActive] = useState(true);\n\tconst [playAnimation, setPlayAnimation] = useState(true);\n\tconst [animationFinished, setAnimationFinished] = useState(false);\n\n\tconst allKeysActiveHandler = () => {\n\t\tsetAllKeysActive(!allKeysActive);\n\t};\n\n\tconst animationPlayingHandler = () => {\n\t\tsetPlayAnimation(!playAnimation);\n\t};\n\n\tconst getWordsPerMinute = (newWordsPerMinute) => {\n\t\tsetWordsPerMinute(newWordsPerMinute);\n\t\tsetUpdateTime(\n\t\t\twordsPerMinToUpdateTime(newWordsPerMinute, fullWelcomeText)\n\t\t);\n\t};\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tif (playAnimation) {\n\t\t\t\tif (stops.includes(charIdx)) {\n\t\t\t\t\tlet tempStops = [...stops];\n\t\t\t\t\ttempStops.shift();\n\t\t\t\t\tsetStops(tempStops);\n\t\t\t\t} else if (charIdx < fullWelcomeText.length) {\n\t\t\t\t\tlet newChar = fullWelcomeText.charAt(charIdx);\n\t\t\t\t\tactivateKeyHandler(newChar);\n\n\t\t\t\t\tif (charIdx === 0) {\n\t\t\t\t\t\tsetWelcomeText(newChar);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetWelcomeText(welcomeText.concat(newChar));\n\t\t\t\t\t}\n\n\t\t\t\t\tsetCharIdx(charIdx + 1);\n\t\t\t\t} else {\n\t\t\t\t\tsetAnimationFinished(true);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetWelcomeText(\" \");\n\t\t\t\t\t\tsetCharIdx(0);\n\t\t\t\t\t\tsetAnimationFinished(false);\n\t\t\t\t\t}, 2000);\n\t\t\t\t}\n\t\t\t}\n\t\t}, updateTime);\n\t}, [charIdx, stops, playAnimation]);\n\n\treturn (\n\t\t<div className={classes.HomePageContainer}>\n\t\t\t<div className={classes.HomePage}>\n\t\t\t\t{/* <div>Solna weather: {weatherInSolna}</div> */}\n\n\t\t\t\t<WelcomeAnimation\n\t\t\t\t\twelcomeText={welcomeText}\n\t\t\t\t\tanimationFinished={animationFinished}\n\t\t\t\t\tplayAnimation={playAnimation}\n\t\t\t\t/>\n\n\t\t\t\t<PrettoSlider\n\t\t\t\t\tdefaultValue={wordsPerMinute}\n\t\t\t\t\tgetAriaValueText={getWordsPerMinute}\n\t\t\t\t\taria-labelledby=\"discrete-slider\"\n\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\tstep={5}\n\t\t\t\t\tmarks\n\t\t\t\t\tmin={5}\n\t\t\t\t\tmax={100}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: \"500px\",\n\t\t\t\t\t\tmargin: \"20px auto 10px auto\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<p>\n\t\t\t\t\tWords per minute:{\" \"}\n\t\t\t\t\t<strong style={{ color: \"#FE6E6E\" }}>\n\t\t\t\t\t\t{wordsPerMinute}\n\t\t\t\t\t</strong>\n\t\t\t\t</p>\n\n\t\t\t\t<KeyboardContainer\n\t\t\t\t\tkeyboardType=\"swe-win\"\n\t\t\t\t\tactiveKey={activeKey}\n\t\t\t\t\tupdateTime={updateTime}\n\t\t\t\t\tallKeysActive={allKeysActive}\n\t\t\t\t/>\n\n\t\t\t\t<div className={classes.settings}>\n\t\t\t\t\t<div className={classes.setting}>\n\t\t\t\t\t\t<mark className={classes.mappingText}>Animation</mark>\n\t\t\t\t\t\t<ToggleButtonGroup\n\t\t\t\t\t\t\tvalue={playAnimation}\n\t\t\t\t\t\t\texclusive\n\t\t\t\t\t\t\tonChange={animationPlayingHandler}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmargin: \"0 auto\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ToggleButton value={true}>\n\t\t\t\t\t\t\t\t<PlayIcon />\n\t\t\t\t\t\t\t</ToggleButton>\n\n\t\t\t\t\t\t\t<ToggleButton value={false}>\n\t\t\t\t\t\t\t\t<PauseIcon />\n\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t</ToggleButtonGroup>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={classes.setting}>\n\t\t\t\t\t\t<mark className={classes.mappingText}>\n\t\t\t\t\t\t\tKey-finger mapping\n\t\t\t\t\t\t</mark>\n\t\t\t\t\t\t<ToggleButtonGroup\n\t\t\t\t\t\t\tvalue={allKeysActive}\n\t\t\t\t\t\t\texclusive\n\t\t\t\t\t\t\tonChange={allKeysActiveHandler}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmargin: \"0 auto\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ToggleButton value={true}>\n\t\t\t\t\t\t\t\t<div>Show</div>\n\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t<ToggleButton value={false}>\n\t\t\t\t\t\t\t\t<div>Hide</div>\n\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t</ToggleButtonGroup>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default HomePage;\n","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/KeyboardContainer/KeyboardContainer.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/WelcomeAnimation/WelcomeAnimation.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/KeyBoard/Keyboard.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/KeyBoard/Key/Key.jsx",["230"],"import React from 'react';\nimport classes from './key.module.scss';\n\nconst Key = ({\n    char, \n    shiftChar, \n    altChar, \n    width, \n    finger, \n    keyLeave,\n    keyEnter,\n    updateTime,\n    allKeysActive,\n    active=false\n}) => {\n    let keyWidth, \n        BGColor, \n        borderColor,\n        hasMarker,\n        keyMarkerClass,\n        activeKeyColor,\n        keyClasses;\n    \n    const fingerColorMap = {\n        \"pinkyL\": \"red\",\n        \"ringL\": \"blue\",\n        \"middleL\": \"orange\",\n        \"indexL\": \"green\",\n        \"thumbL\": \"purple\",\n        \"thumbR\": \"purple\",\n        \"indexR\": \"red\",\n        \"middleR\": \"blue\",\n        \"ringR\": \"orange\",\n        \"pinkyR\": \"green\",\n    };\n\n    activeKeyColor = fingerColorMap[finger];\n    keyClasses = [classes.Key];\n\n    if (activeKeyColor === \"red\") {\n        if (allKeysActive && active) {\n            keyClasses.push(classes.redActive);\n            borderColor = \"#BF5252\";\n        } else if (allKeysActive) {\n            keyClasses.push(classes.redKey);\n            borderColor = \"#BF5252\";\n        } else if (!active) {\n            keyClasses.push(classes.inActiveKey, classes.redHover);\n            borderColor = \"#777777\";\n        } else {\n            keyClasses.push(classes.redKey);\n            borderColor = \"#BF5252\";\n        }\n    } else if (activeKeyColor === \"blue\") {\n        if (allKeysActive && active) {\n            keyClasses.push(classes.blueActive);\n            borderColor = \"#5289BF\";\n        } else if (allKeysActive) {\n            keyClasses.push(classes.blueKey);\n            borderColor = \"#5289BF\";\n        } else if (!active) {\n            keyClasses.push(classes.inActiveKey, classes.blueHover);\n            borderColor = \"#777777\";\n        } else {\n            keyClasses.push(classes.blueKey);\n            borderColor = \"#5289BF\";\n        }\n    }  else if (activeKeyColor === \"green\") {\n        if (allKeysActive && active) {\n            keyClasses.push(classes.greenActive);\n            borderColor = \"#439957\";\n        } else if (allKeysActive) {\n            keyClasses.push(classes.greenKey);\n            borderColor = \"#439957\";\n        } else if (!active) {\n            keyClasses.push(classes.inActiveKey, classes.greenHover);\n            borderColor = \"#777777\";\n        } else {\n            keyClasses.push(classes.greenKey);\n            borderColor = \"#439957\";\n        }\n    }  else if (activeKeyColor === \"orange\") {\n        if (allKeysActive && active) {\n            keyClasses.push(classes.orangeActive);\n            borderColor = \"#BF9452\";\n        } else if (allKeysActive) {\n            keyClasses.push(classes.orangeKey);\n            borderColor = \"#BF9452\";\n        } else if (!active) {\n            keyClasses.push(classes.inActiveKey, classes.orangeHover);\n            borderColor = \"#777777\";\n        } else {\n            keyClasses.push(classes.orangeKey);\n            borderColor = \"#BF9452\";\n        }\n    }  else if (activeKeyColor === \"purple\") {\n        if (allKeysActive && active) {\n            keyClasses.push(classes.purpleActive);\n            borderColor = \"#9752BF\";\n        } else if (allKeysActive) {\n            keyClasses.push(classes.purpleKey);\n            borderColor = \"#9752BF\";\n        } else if (!active) {\n            keyClasses.push(classes.inActiveKey, classes.purpleHover);\n            borderColor = \"#777777\";\n        } else {\n            keyClasses.push(classes.purpleKey);\n            borderColor = \"#9752BF\";\n        }\n    } else {\n        if (allKeysActive && active) {\n            keyClasses.push(classes.grayActive);\n            borderColor = \"#777777\";\n        } else if (allKeysActive) {\n            keyClasses.push(classes.grayKey);\n            borderColor = \"#777777\";\n        } else if (!active) {\n            keyClasses.push(classes.inActiveKey, classes.grayHover);\n            borderColor = \"#777777\";\n        } else {\n            keyClasses.push(classes.grayKey);\n            borderColor = \"#777777\";\n        }\n    }\n\n    if (width === undefined) {\n        keyWidth = \"50px\";\n    } else {\n        keyWidth = width;\n    }\n\n    if ('FfJj'.includes(char)) {\n        hasMarker = true;\n    } else {\n        hasMarker = false;\n    }\n\n    if (hasMarker) {\n        keyMarkerClass = classes.marker;\n    } else {\n        keyMarkerClass = classes.hide;\n    }\n\n    let transitionTime;\n\n    if (updateTime > 150) {\n        transitionTime = Math.sqrt(updateTime) / 100;\n    } else {\n        transitionTime = \"none\";\n    }\n\n    let topLeft = \"\", \n        topRight = \"\",\n        bottomLeft = \"\", \n        bottomRight = \"\";\n\n    if (\"0123456789<,.-§¨'\".includes(char)) {\n        bottomLeft = char;\n        topLeft = shiftChar;\n        bottomRight = altChar;\n    } else {\n        topLeft = char;\n        bottomLeft = shiftChar; // Måste lösa detta, bara stora bokstäver ska synas på tangentbordet\n        bottomRight = altChar;\n    }\n\n    return (\n        <div \n            className={keyClasses.join(\" \")}\n            style={{\n                \"width\": keyWidth,\n                \"transition\": transitionTime\n            }}\n            onMouseEnter={() => keyEnter(finger)}\n            onMouseLeave={() => keyLeave()}\n        >\n            {\n                keyWidth !== \"50px\"\n                  ? <div>{char}</div>\n                  : <div>\n                        <div className={classes.topRow}>\n                            {topLeft === \"\" ? <div></div> : <div>{topLeft}</div>}\n                            {topRight === \"\" ? <div></div> : <div>{topRight}</div>}\n                        </div>\n                        <div className={classes.bottomRow}>\n                            {bottomLeft === \"\" ? <div></div> : <div>{bottomLeft}</div>}\n                            {bottomRight === \"\" ? <div></div> : <div>{bottomRight}</div>}\n                        </div>\n                    </div>\n            }\n            <div \n                className={keyMarkerClass}\n                style={{\n                    \"backgroundColor\": borderColor\n                }}\n            />\n        </div>\n    )\n}\n\nexport default Key;","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/Divider/Divider.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/formButtons/GoogleAuthButton/GoogleAuthButton.jsx",["231"],"import React from \"react\";\nimport classes from \"./googleAuthButton.module.scss\";\n\nimport googleIcon from \"../../../../../resources/icons/googleIcon.svg\";\n\nconst GoogleAuthButton = ({ text, onClickHandler }) => {\n\treturn (\n\t\t<button onClick={onClickHandler} className={classes.GoogleAuthButton}>\n\t\t\t<div className={classes.iconContainer}>\n\t\t\t\t<img src={googleIcon} />\n\t\t\t</div>\n\t\t\t{text}\n\t\t</button>\n\t);\n};\n\nexport default GoogleAuthButton;\n","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/formButtons/SubmitButton/SubmitButton.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/utility/sliderStyles.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/TestButton.jsx",[],["232","233"],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/CustomButton.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/DesktopNavigation/DesktopNavigation.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/MobileNavigation/MobileNavigation.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/NewKeyboard.jsx",["234","235","236","237","238","239","240","241","242"],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/keys/SmallKey/SmallKey.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/KeyboardRow/KeyboardRow.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/HeaderAnimation/HeaderAnimation.jsx",["243","244"],"import React, { useEffect, useState } from \"react\";\nimport findStopsInText from \"../../../utility/findStopsInText\";\nimport wordsPerMinToUpdateTime from \"../../../utility/wordsPerMinToUpdateTime\";\nimport classes from \"./headerAnimation.module.scss\";\nimport TextMarker from \"../TextMarker/TextMarker\";\n\nconst HeaderAnimation = ({ headerText, showContentHandler }) => {\n\tconst updateTime = wordsPerMinToUpdateTime(50, headerText);\n\n\tconst [currentHeaderText, setCurrentHeaderText] = useState(\" \");\n\tconst [stops, setStops] = useState(findStopsInText(headerText));\n\tconst [charIdx, setCharIdx] = useState(0);\n\tconst [animationFinished, setAnimationFinished] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tif (stops.includes(charIdx)) {\n\t\t\t\tlet tempStops = [...stops];\n\t\t\t\ttempStops.shift();\n\t\t\t\tsetStops(tempStops);\n\t\t\t} else if (charIdx < headerText.length) {\n\t\t\t\tlet newChar = headerText.charAt(charIdx);\n\n\t\t\t\tif (charIdx === 0) {\n\t\t\t\t\tsetCurrentHeaderText(newChar);\n\t\t\t\t} else {\n\t\t\t\t\tsetCurrentHeaderText(currentHeaderText.concat(newChar));\n\t\t\t\t}\n\n\t\t\t\tsetCharIdx(charIdx + 1);\n\t\t\t} else {\n\t\t\t\tsetAnimationFinished(true);\n\t\t\t}\n\t\t}, updateTime);\n\n\t\tshowContentHandler(true);\n\t}, [charIdx, stops]);\n\n\treturn (\n\t\t<h1>\n\t\t\t{currentHeaderText}\n\t\t\t<TextMarker hide={animationFinished} />\n\t\t</h1>\n\t);\n};\n\nexport default HeaderAnimation;\n","/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/keys/MediumKey/MediumKey.jsx",[],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":50,"column":5,"nodeType":"251","endLine":50,"endColumn":21,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":26},{"ruleId":"253","severity":1,"message":"257","line":4,"column":8,"nodeType":"255","messageId":"256","endLine":4,"endColumn":23},{"ruleId":"253","severity":1,"message":"258","line":5,"column":8,"nodeType":"255","messageId":"256","endLine":5,"endColumn":31},{"ruleId":"253","severity":1,"message":"259","line":7,"column":8,"nodeType":"255","messageId":"256","endLine":7,"endColumn":18},{"ruleId":"253","severity":1,"message":"254","line":1,"column":27,"nodeType":"255","messageId":"256","endLine":1,"endColumn":36},{"ruleId":"253","severity":1,"message":"260","line":3,"column":8,"nodeType":"255","messageId":"256","endLine":3,"endColumn":14},{"ruleId":"253","severity":1,"message":"257","line":5,"column":8,"nodeType":"255","messageId":"256","endLine":5,"endColumn":23},{"ruleId":"253","severity":1,"message":"258","line":6,"column":8,"nodeType":"255","messageId":"256","endLine":6,"endColumn":31},{"ruleId":"253","severity":1,"message":"259","line":8,"column":8,"nodeType":"255","messageId":"256","endLine":8,"endColumn":18},{"ruleId":"253","severity":1,"message":"261","line":12,"column":8,"nodeType":"255","messageId":"256","endLine":12,"endColumn":21},{"ruleId":"253","severity":1,"message":"262","line":14,"column":8,"nodeType":"255","messageId":"256","endLine":14,"endColumn":27},{"ruleId":"253","severity":1,"message":"263","line":8,"column":9,"nodeType":"255","messageId":"256","endLine":8,"endColumn":20},{"ruleId":"253","severity":1,"message":"264","line":2,"column":8,"nodeType":"255","messageId":"256","endLine":2,"endColumn":15},{"ruleId":"253","severity":1,"message":"265","line":10,"column":26,"nodeType":"255","messageId":"256","endLine":10,"endColumn":41},{"ruleId":"266","severity":1,"message":"267","line":56,"column":13,"nodeType":"268","endLine":56,"endColumn":38},{"ruleId":"266","severity":1,"message":"267","line":55,"column":13,"nodeType":"268","endLine":55,"endColumn":39},{"ruleId":"253","severity":1,"message":"264","line":2,"column":8,"nodeType":"255","messageId":"256","endLine":2,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":9,"column":20,"nodeType":"271","messageId":"272","endLine":9,"endColumn":22},{"ruleId":"269","severity":1,"message":"270","line":11,"column":27,"nodeType":"271","messageId":"272","endLine":11,"endColumn":29},{"ruleId":"253","severity":1,"message":"273","line":3,"column":8,"nodeType":"255","messageId":"256","endLine":3,"endColumn":16},{"ruleId":"253","severity":1,"message":"264","line":2,"column":8,"nodeType":"255","messageId":"256","endLine":2,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":10,"column":20,"nodeType":"271","messageId":"272","endLine":10,"endColumn":22},{"ruleId":"269","severity":1,"message":"270","line":12,"column":27,"nodeType":"271","messageId":"272","endLine":12,"endColumn":29},{"ruleId":"266","severity":1,"message":"267","line":12,"column":20,"nodeType":"268","endLine":17,"endColumn":11},{"ruleId":"266","severity":1,"message":"267","line":19,"column":20,"nodeType":"268","endLine":24,"endColumn":11},{"ruleId":"249","severity":1,"message":"274","line":109,"column":5,"nodeType":"251","endLine":109,"endColumn":36,"suggestions":"275"},{"ruleId":"253","severity":1,"message":"276","line":17,"column":9,"nodeType":"255","messageId":"256","endLine":17,"endColumn":16},{"ruleId":"266","severity":1,"message":"267","line":10,"column":5,"nodeType":"268","endLine":10,"endColumn":29},{"ruleId":"245","replacedBy":"277"},{"ruleId":"247","replacedBy":"278"},{"ruleId":"253","severity":1,"message":"279","line":3,"column":8,"nodeType":"255","messageId":"256","endLine":3,"endColumn":18},{"ruleId":"253","severity":1,"message":"280","line":5,"column":8,"nodeType":"255","messageId":"256","endLine":5,"endColumn":16},{"ruleId":"253","severity":1,"message":"281","line":7,"column":8,"nodeType":"255","messageId":"256","endLine":7,"endColumn":11},{"ruleId":"253","severity":1,"message":"282","line":11,"column":8,"nodeType":"255","messageId":"256","endLine":11,"endColumn":17},{"ruleId":"253","severity":1,"message":"283","line":376,"column":9,"nodeType":"255","messageId":"256","endLine":376,"endColumn":19},{"ruleId":"253","severity":1,"message":"284","line":376,"column":21,"nodeType":"255","messageId":"256","endLine":376,"endColumn":34},{"ruleId":"253","severity":1,"message":"285","line":379,"column":9,"nodeType":"255","messageId":"256","endLine":379,"endColumn":18},{"ruleId":"253","severity":1,"message":"286","line":410,"column":8,"nodeType":"255","messageId":"256","endLine":410,"endColumn":19},{"ruleId":"249","severity":1,"message":"287","line":440,"column":5,"nodeType":"251","endLine":440,"endColumn":7,"suggestions":"288"},{"ruleId":"253","severity":1,"message":"264","line":4,"column":8,"nodeType":"255","messageId":"256","endLine":4,"endColumn":15},{"ruleId":"249","severity":1,"message":"289","line":37,"column":5,"nodeType":"251","endLine":37,"endColumn":21,"suggestions":"290"},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'headerText' and 'updateTime'. Either include them or remove the dependency array. You can also do a functional update 'setHeaderText(h => ...)' if you only need 'headerText' in the 'setHeaderText' call.","ArrayExpression",["293"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'findStopsInText' is defined but never used.","'wordsPerMinToUpdateTime' is defined but never used.","'TextMarker' is defined but never used.","'SWLogo' is defined but never used.","'UsernameInput' is defined but never used.","'RepeatPasswordInput' is defined but never used.","'showContent' is assigned a value but never used.","'classes' is defined but never used.","'setUserLoggedIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Checkbox' is defined but never used.","React Hook useEffect has missing dependencies: 'updateTime' and 'welcomeText'. Either include them or remove the dependency array. You can also do a functional update 'setWelcomeText(w => ...)' if you only need 'welcomeText' in the 'setWelcomeText' call.",["294"],"'BGColor' is defined but never used.",["291"],["292"],"'keyClasses' is defined but never used.","'SmallKey' is defined but never used.","'Row' is defined but never used.","'MediumKey' is defined but never used.","'activeKeys' is assigned a value but never used.","'setActiveKeys' is assigned a value but never used.","'rowHeight' is assigned a value but never used.","'activateKey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleResize' and 'numKeyRows'. Either include them or remove the dependency array.",["295"],"React Hook useEffect has missing dependencies: 'currentHeaderText', 'headerText', 'showContentHandler', and 'updateTime'. Either include them or remove the dependency array. If 'showContentHandler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["296"],"no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},"Update the dependencies array to be: [charIdx, headerText, stops, updateTime]",{"range":"305","text":"306"},"Update the dependencies array to be: [charIdx, stops, playAnimation, updateTime, welcomeText]",{"range":"307","text":"308"},"Update the dependencies array to be: [handleResize, numKeyRows]",{"range":"309","text":"310"},"Update the dependencies array to be: [charIdx, currentHeaderText, headerText, showContentHandler, stops, updateTime]",{"range":"311","text":"312"},[1861,1877],"[charIdx, headerText, stops, updateTime]",[2981,3012],"[charIdx, stops, playAnimation, updateTime, welcomeText]",[7545,7547],"[handleResize, numKeyRows]",[1192,1208],"[charIdx, currentHeaderText, headerText, showContentHandler, stops, updateTime]"]