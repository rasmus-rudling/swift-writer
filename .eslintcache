[{"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\index.js":"1","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\App.js":"2","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\reportWebVitals.js":"3","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\MainMenu\\MainMenu.jsx":"4","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\ContestPage\\ContestPage.jsx":"5","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\LogInPage\\LogInPage.jsx":"6","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\PractisePage\\PractisePage.jsx":"7","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\FeedbackPage\\FeedbackPage.jsx":"8","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\SignUpPage\\SignUpPage.jsx":"9","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\FrontPage\\FrontPage.jsx":"10","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Utility\\practiceSets.js":"11","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Common\\Buttons\\SecondaryButton\\SecondaryButton.jsx":"12","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Common\\Buttons\\PrimaryButton\\PrimaryButton.jsx":"13","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\FrontPage\\KeyboardContainer\\KeyboardContainer.jsx":"14","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\FrontPage\\WelcomeAnimation\\WelcomeAnimation.jsx":"15","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Hands\\LeftHand\\LeftHand.jsx":"16","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Hands\\RightHand\\RightHand.jsx":"17","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Keyboards\\Swedish\\Windows\\SweWinKeyboard.jsx":"18","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Hands\\FingerIndicator\\FingerIndicator.jsx":"19","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\KeyBoard\\Keyboard.jsx":"20","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\KeyBoard\\Key\\Key.jsx":"21","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Utility\\findStopsInText.js":"22","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Utility\\wordsPerMinToUpdateTime.js":"23","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Common\\TextMarker\\TextMarker.jsx":"24"},{"size":1058,"mtime":1611616296943,"results":"25","hashOfConfig":"26"},{"size":1480,"mtime":1611623185264,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":2204,"mtime":1611675096261,"results":"29","hashOfConfig":"26"},{"size":1680,"mtime":1611680934711,"results":"30","hashOfConfig":"26"},{"size":1669,"mtime":1611680799290,"results":"31","hashOfConfig":"26"},{"size":1767,"mtime":1611680925217,"results":"32","hashOfConfig":"26"},{"size":1685,"mtime":1611680931934,"results":"33","hashOfConfig":"26"},{"size":1673,"mtime":1611680928496,"results":"34","hashOfConfig":"26"},{"size":6581,"mtime":1611681029202,"results":"35","hashOfConfig":"26"},{"size":993,"mtime":1611360375745,"results":"36","hashOfConfig":"26"},{"size":1059,"mtime":1611523420504,"results":"37","hashOfConfig":"26"},{"size":969,"mtime":1611621349829,"results":"38","hashOfConfig":"26"},{"size":3121,"mtime":1611533019599,"results":"39","hashOfConfig":"26"},{"size":795,"mtime":1611681072735,"results":"40","hashOfConfig":"26"},{"size":1623,"mtime":1611517587003,"results":"41","hashOfConfig":"26"},{"size":1631,"mtime":1611517600461,"results":"42","hashOfConfig":"26"},{"size":6897,"mtime":1611524618559,"results":"43","hashOfConfig":"26"},{"size":1664,"mtime":1611525735522,"results":"44","hashOfConfig":"26"},{"size":1628,"mtime":1611526593120,"results":"45","hashOfConfig":"26"},{"size":5159,"mtime":1611525240276,"results":"46","hashOfConfig":"26"},{"size":253,"mtime":1611616978070,"results":"47","hashOfConfig":"26"},{"size":546,"mtime":1611617024431,"results":"48","hashOfConfig":"26"},{"size":561,"mtime":1611680586725,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xsmglz",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\index.js",["103"],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\App.js",["104"],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\reportWebVitals.js",[],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\MainMenu\\MainMenu.jsx",[],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\ContestPage\\ContestPage.jsx",["105"],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\LogInPage\\LogInPage.jsx",["106"],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\PractisePage\\PractisePage.jsx",["107"],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\FeedbackPage\\FeedbackPage.jsx",["108"],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\SignUpPage\\SignUpPage.jsx",["109"],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\FrontPage\\FrontPage.jsx",["110"],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Utility\\practiceSets.js",[],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Common\\Buttons\\SecondaryButton\\SecondaryButton.jsx",[],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Common\\Buttons\\PrimaryButton\\PrimaryButton.jsx",[],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\FrontPage\\KeyboardContainer\\KeyboardContainer.jsx",[],["111","112"],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Pages\\FrontPage\\WelcomeAnimation\\WelcomeAnimation.jsx",["113","114"],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Hands\\LeftHand\\LeftHand.jsx",["115"],"import React from 'react';\r\nimport classes from './leftHand.module.scss';\r\n\r\nimport leftHandImg from '../../../Resources/Images/leftHand.png';\r\nimport FingerIndicator from '../FingerIndicator/FingerIndicator';\r\n\r\nconst LeftHand = ({highlightedFingers, updateTime}) => {\r\n    return (\r\n        <div className={classes.LeftHand}>\r\n            <FingerIndicator \r\n                color=\"red\" \r\n                top = \"50px\"\r\n                left = \"-11px\"\r\n                show = {highlightedFingers[\"pinkyL\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"blue\" \r\n                top = \"-2px\"\r\n                left = \"28px\"\r\n                show = {highlightedFingers[\"ringL\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"orange\" \r\n                top = \"-10px\"\r\n                left = \"72px\"\r\n                show = {highlightedFingers[\"middleL\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"green\" \r\n                top = \"0px\"\r\n                left = \"116px\"\r\n                show = {highlightedFingers[\"indexL\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"purple\" \r\n                top = \"100px\"\r\n                left = \"175px\"\r\n                show = {highlightedFingers[\"thumbL\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <img src={leftHandImg} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftHand;","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Hands\\RightHand\\RightHand.jsx",["116"],"import React from 'react';\r\nimport classes from './rightHand.module.scss';\r\nimport rightHandImg from '../../../Resources/Images/rightHand.png';\r\n\r\nimport FingerIndicator from '../FingerIndicator/FingerIndicator';\r\n\r\nconst RightHand = ({highlightedFingers, updateTime}) => {\r\n    return (\r\n        <div className={classes.RightHand}>\r\n            <FingerIndicator \r\n                color=\"purple\" \r\n                top = \"98px\"\r\n                left = \"41px\"\r\n                show = {highlightedFingers[\"thumbR\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"red\" \r\n                top = \"-2px\"\r\n                left = \"101px\"\r\n                show = {highlightedFingers[\"indexR\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"blue\" \r\n                top = \"-10px\"\r\n                left = \"145px\"\r\n                show = {highlightedFingers[\"middleR\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"orange\" \r\n                top = \"-1px\"\r\n                left = \"189px\"\r\n                show = {highlightedFingers[\"ringR\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"green\" \r\n                top = \"50px\"\r\n                left = \"228px\"\r\n                show = {highlightedFingers[\"pinkyR\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <img src={rightHandImg} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightHand;","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Keyboards\\Swedish\\Windows\\SweWinKeyboard.jsx",["117"],"import React from 'react';\r\nimport classes from './sweWinKeyboard.module.scss';\r\n\r\nimport Keyboard from '../../../KeyBoard/Keyboard';\r\n\r\nconst SweWinKeyboard = ({\r\n    keyEnter, \r\n    keyLeave, \r\n    clearIndicators, \r\n    activeKey,\r\n    updateTime,\r\n    allKeysActive\r\n}) => {\r\n    const defaultWidth = '50px';\r\n    let sweWinKeys = [\r\n        [\r\n            {\"char\":'§', \"shiftChar\":'½', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyL\"},\r\n            {\"char\":'1', \"shiftChar\":'!', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyL\"},\r\n            {\"char\":'2', \"shiftChar\":'\"', \"altGrChar\":'@', \"width\":defaultWidth, \"finger\":\"ringL\"},\r\n            {\"char\":'3', \"shiftChar\":'#', \"altGrChar\":'£', \"width\":defaultWidth, \"finger\":\"middleL\"},\r\n            {\"char\":'4', \"shiftChar\":'¤', \"altGrChar\":'$', \"width\":defaultWidth, \"finger\":\"indexL\"},\r\n            {\"char\":'5', \"shiftChar\":'%', \"altGrChar\":'€', \"width\":defaultWidth, \"finger\":\"indexL\"},\r\n            {\"char\":'6', \"shiftChar\":'&', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexR\"},\r\n            {\"char\":'7', \"shiftChar\":'/', \"altGrChar\":'{', \"width\":defaultWidth, \"finger\":\"indexR\"},\r\n            {\"char\":'8', \"shiftChar\":'(', \"altGrChar\":'[', \"width\":defaultWidth, \"finger\":\"middleR\"},\r\n            {\"char\":'9', \"shiftChar\":')', \"altGrChar\":']', \"width\":defaultWidth, \"finger\":\"ringR\"},\r\n            {\"char\":'0', \"shiftChar\":'=', \"altGrChar\":'}', \"width\":defaultWidth, \"finger\":\"pinkyR\"},\r\n            {\"char\":'+', \"shiftChar\":'?', \"altGrChar\":'\\\\', \"width\":defaultWidth, \"finger\":\"pinkyR\"},\r\n            {\"char\":'´', \"shiftChar\":'`', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyR\"},\r\n            {\"char\":\"← Back\", \"shiftChar\":'', \"altGrChar\":'', \"width\":\"85px\", \"finger\":\"pinkyR\"}\r\n        ],\r\n        [\r\n            {\"char\":'Tab ↹', \"shiftChar\":'', \"altGrChar\":'', \"width\":\"75px\", \"finger\":\"pinkyL\"},\r\n            {\"char\":'q', \"shiftChar\":'Q', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyL\"},\r\n            {\"char\":'w', \"shiftChar\":'W', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"ringL\"},\r\n            {\"char\":'e', \"shiftChar\":'E', \"altGrChar\":'€', \"width\":defaultWidth, \"finger\":\"middleL\"},\r\n            {\"char\":'r', \"shiftChar\":'R', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexL\"},\r\n            {\"char\":'t', \"shiftChar\":'T', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexL\"},\r\n            {\"char\":'y', \"shiftChar\":'Y', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexR\"},\r\n            {\"char\":'u', \"shiftChar\":'U', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexR\"},\r\n            {\"char\":'i', \"shiftChar\":'I', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"middleR\"},\r\n            {\"char\":'o', \"shiftChar\":'O', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"ringR\"},\r\n            {\"char\":'p', \"shiftChar\":'P', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyR\"},\r\n            {\"char\":'å', \"shiftChar\":'Å', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyR\"},\r\n            {\"char\":'¨', \"shiftChar\":'^', \"altGrChar\":'~', \"width\":defaultWidth, \"finger\":\"pinkyR\"},\r\n        ], \r\n        [\r\n            {\"char\":'CapsLock', \"shiftChar\":'', \"altGrChar\":'', \"width\":\"85px\", \"finger\":\"pinkyL\"},\r\n            {\"char\":'a', \"shiftChar\":'A', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyL\"},\r\n            {\"char\":'s', \"shiftChar\":'S', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"ringL\"},\r\n            {\"char\":'d', \"shiftChar\":'D', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"middleL\"},\r\n            {\"char\":'f', \"shiftChar\":'F', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexL\"},\r\n            {\"char\":'g', \"shiftChar\":'G', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexL\"},\r\n            {\"char\":'h', \"shiftChar\":'H', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexR\"},\r\n            {\"char\":'j', \"shiftChar\":'J', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexR\"},\r\n            {\"char\":'k', \"shiftChar\":'K', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"middleR\"},\r\n            {\"char\":'l', \"shiftChar\":'L', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"ringR\"},\r\n            {\"char\":'ö', \"shiftChar\":'Ö', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyR\"},\r\n            {\"char\":'ä', \"shiftChar\":'Ä', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyR\"},\r\n            {\"char\":\"'\", \"shiftChar\":'*', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyR\"},\r\n            {\"char\":\"↲ Enter\", \"shiftChar\":'', \"altGrChar\":'', \"width\":\"75px\", \"finger\":\"pinkyR\"}\r\n        ],\r\n        [\r\n            {\"char\":\"⇧ Shift\", \"shiftChar\":'', \"altGrChar\":'', \"width\":\"75px\", \"finger\":\"pinkyL\"},\r\n            {\"char\":\"<\", \"shiftChar\":'>', \"altGrChar\":'|', \"width\":defaultWidth, \"finger\":\"pinkyL\"},\r\n            {\"char\":\"z\", \"shiftChar\":'Z', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyL\"},\r\n            {\"char\":\"x\", \"shiftChar\":'X', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"ringL\"},\r\n            {\"char\":\"c\", \"shiftChar\":'C', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"middleL\"},\r\n            {\"char\":\"v\", \"shiftChar\":'V', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexL\"},\r\n            {\"char\":\"b\", \"shiftChar\":'B', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexL\"},\r\n            {\"char\":\"n\", \"shiftChar\":'N', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"indexR\"},\r\n            {\"char\":\"m\", \"shiftChar\":'M', \"altGrChar\":'µ', \"width\":defaultWidth, \"finger\":\"indexR\"},\r\n            {\"char\":\",\", \"shiftChar\":';', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"middleR\"},\r\n            {\"char\":\".\", \"shiftChar\":':', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"ringR\"},\r\n            {\"char\":\"-\", \"shiftChar\":'_', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyR\"},\r\n            {\"char\":\"⇧ Shift\", \"shiftChar\":'_', \"altGrChar\":'', \"width\":\"85px\", \"finger\":\"pinkyR\"},\r\n        ],\r\n        [\r\n            {\"char\":\"Ctrl\", \"shiftChar\":'', \"altGrChar\":'', \"width\":\"85px\", \"finger\":\"pinkyL\"},\r\n            {\"char\":\"win\", \"shiftChar\":'', \"altGrChar\":'', \"width\":defaultWidth, \"finger\":\"pinkyL\"},\r\n            {\"char\":\"Alt\", \"shiftChar\":'', \"altGrChar\":'', \"width\":\"85px\", \"finger\":\"pinkyL\"},\r\n            {\"char\":\"Space\", \"shiftChar\":'', \"altGrChar\":'', \"width\":\"350px\", \"finger\":\"thumbR\"},\r\n            {\"char\":\"Alt Gr\", \"shiftChar\":'', \"altGrChar\":'', \"width\":\"85px\", \"finger\":\"ringR\"},\r\n            {\"char\":\"Fn\", \"shiftChar\":'', \"altGrChar\":'', \"width\":\"85px\", \"finger\":\"pinkyR\"},\r\n        ]\r\n    ];\r\n\r\n    return (\r\n        <Keyboard \r\n            keys = {sweWinKeys}\r\n            keyEnter = {keyEnter}\r\n            keyLeave = {keyLeave}\r\n            clearIndicators = {clearIndicators}\r\n            activeKey = {activeKey}\r\n            updateTime = {updateTime}\r\n            allKeysActive = {allKeysActive}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SweWinKeyboard;","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Hands\\FingerIndicator\\FingerIndicator.jsx",[],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\KeyBoard\\Keyboard.jsx",[],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\KeyBoard\\Key\\Key.jsx",["118"],"import React from 'react';\r\nimport classes from './key.module.scss';\r\n\r\nconst Key = ({\r\n    char, \r\n    shiftChar, \r\n    altGrChar, \r\n    width, \r\n    finger, \r\n    keyLeave,\r\n    keyEnter,\r\n    updateTime,\r\n    allKeysActive,\r\n    active=false\r\n}) => {\r\n    let keyWidth, \r\n        BGColor, \r\n        borderColor,\r\n        hasMarker,\r\n        keyMarkerClass,\r\n        activeKeyColor,\r\n        keyClasses;\r\n    \r\n    const fingerColorMap = {\r\n        \"pinkyL\": \"red\",\r\n        \"ringL\": \"blue\",\r\n        \"middleL\": \"orange\",\r\n        \"indexL\": \"green\",\r\n        \"thumbL\": \"purple\",\r\n        \"thumbR\": \"purple\",\r\n        \"indexR\": \"red\",\r\n        \"middleR\": \"blue\",\r\n        \"ringR\": \"orange\",\r\n        \"pinkyR\": \"green\",\r\n    };\r\n\r\n    activeKeyColor = fingerColorMap[finger];\r\n    keyClasses = [classes.Key];\r\n\r\n    if (activeKeyColor === \"red\") {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.redActive);\r\n            borderColor = \"#BF5252\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.redKey);\r\n            borderColor = \"#BF5252\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.redHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.redKey);\r\n            borderColor = \"#BF5252\";\r\n        }\r\n    } else if (activeKeyColor === \"blue\") {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.blueActive);\r\n            borderColor = \"#5289BF\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.blueKey);\r\n            borderColor = \"#5289BF\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.blueHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.blueKey);\r\n            borderColor = \"#5289BF\";\r\n        }\r\n    }  else if (activeKeyColor === \"green\") {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.greenActive);\r\n            borderColor = \"#439957\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.greenKey);\r\n            borderColor = \"#439957\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.greenHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.greenKey);\r\n            borderColor = \"#439957\";\r\n        }\r\n    }  else if (activeKeyColor === \"orange\") {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.orangeActive);\r\n            borderColor = \"#BF9452\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.orangeKey);\r\n            borderColor = \"#BF9452\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.orangeHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.orangeKey);\r\n            borderColor = \"#BF9452\";\r\n        }\r\n    }  else if (activeKeyColor === \"purple\") {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.purpleActive);\r\n            borderColor = \"#9752BF\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.purpleKey);\r\n            borderColor = \"#9752BF\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.purpleHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.purpleKey);\r\n            borderColor = \"#9752BF\";\r\n        }\r\n    } else {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.grayActive);\r\n            borderColor = \"#777777\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.grayKey);\r\n            borderColor = \"#777777\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.grayHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.grayKey);\r\n            borderColor = \"#777777\";\r\n        }\r\n    }\r\n\r\n    if (width === undefined) {\r\n        keyWidth = \"50px\";\r\n    } else {\r\n        keyWidth = width;\r\n    }\r\n\r\n    if ('FfJj'.includes(char)) {\r\n        hasMarker = true;\r\n    } else {\r\n        hasMarker = false;\r\n    }\r\n\r\n    if (hasMarker) {\r\n        keyMarkerClass = classes.marker;\r\n    } else {\r\n        keyMarkerClass = classes.hide;\r\n    }\r\n\r\n    let transitionTime;\r\n\r\n    if (updateTime > 150) {\r\n        transitionTime = Math.sqrt(updateTime) / 100;\r\n    } else {\r\n        transitionTime = \"none\";\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={keyClasses.join(\" \")}\r\n            style={{\r\n                \"width\": keyWidth,\r\n                \"transition\": transitionTime\r\n            }}\r\n            onMouseEnter={() => keyEnter(finger)}\r\n            onMouseLeave={() => keyLeave()}\r\n        >\r\n            {char}\r\n\r\n            <div \r\n                className={keyMarkerClass}\r\n                style={{\r\n                    \"backgroundColor\": borderColor\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Key;","C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Utility\\findStopsInText.js",[],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Utility\\wordsPerMinToUpdateTime.js",[],"C:\\Users\\sumsa\\Documents\\Utveckling\\SwiftWriter\\swift-writer-app\\src\\Components\\Common\\TextMarker\\TextMarker.jsx",[],{"ruleId":"119","severity":1,"message":"120","line":21,"column":7,"nodeType":"121","messageId":"122","endLine":21,"endColumn":16},{"ruleId":"119","severity":1,"message":"123","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":38,"column":8,"nodeType":"126","endLine":38,"endColumn":24,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"125","line":39,"column":8,"nodeType":"126","endLine":39,"endColumn":24,"suggestions":"128"},{"ruleId":"124","severity":1,"message":"125","line":39,"column":8,"nodeType":"126","endLine":39,"endColumn":24,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"125","line":38,"column":8,"nodeType":"126","endLine":38,"endColumn":24,"suggestions":"130"},{"ruleId":"124","severity":1,"message":"125","line":38,"column":8,"nodeType":"126","endLine":38,"endColumn":24,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"132","line":106,"column":8,"nodeType":"126","endLine":106,"endColumn":39,"suggestions":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"119","severity":1,"message":"138","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"139","line":1,"column":28,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"141","line":50,"column":13,"nodeType":"142","endLine":50,"endColumn":38},{"ruleId":"140","severity":1,"message":"141","line":50,"column":13,"nodeType":"142","endLine":50,"endColumn":39},{"ruleId":"119","severity":1,"message":"123","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":15},{"ruleId":"119","severity":1,"message":"143","line":17,"column":9,"nodeType":"121","messageId":"122","endLine":17,"endColumn":16},"no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar","'classes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'headerText' and 'updateTime'. Either include them or remove the dependency array. You can also do a functional update 'setHeaderText(h => ...)' if you only need 'headerText' in the 'setHeaderText' call.","ArrayExpression",["144"],["145"],["146"],["147"],["148"],"React Hook useEffect has missing dependencies: 'updateTime' and 'welcomeText'. Either include them or remove the dependency array. You can also do a functional update 'setWelcomeText(w => ...)' if you only need 'welcomeText' in the 'setWelcomeText' call.",["149"],"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'BGColor' is defined but never used.",{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},{"desc":"152","fix":"155"},{"desc":"152","fix":"156"},{"desc":"152","fix":"157"},{"desc":"158","fix":"159"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [charIdx, headerText, stops, updateTime]",{"range":"160","text":"161"},{"range":"162","text":"161"},{"range":"163","text":"161"},{"range":"164","text":"161"},{"range":"165","text":"161"},"Update the dependencies array to be: [charIdx, stops, playAnimation, updateTime, welcomeText]",{"range":"166","text":"167"},[1418,1434],"[charIdx, headerText, stops, updateTime]",[1411,1427],[1472,1488],[1421,1437],[1407,1423],[3625,3656],"[charIdx, stops, playAnimation, updateTime, welcomeText]"]