[{"/home/rasmus/Documents/Coding/swift-writer/src/index.js":"1","/home/rasmus/Documents/Coding/swift-writer/src/reportWebVitals.js":"2","/home/rasmus/Documents/Coding/swift-writer/src/App.js":"3","/home/rasmus/Documents/Coding/swift-writer/src/contexts/LanguageContext.js":"4","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/HomePage.jsx":"5","/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/MainNavigation.jsx":"6","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/SignUpPage/SignUpPage.jsx":"7","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/SignInPage/SignInPage.jsx":"8","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickPractisePage/QuickPractisePage.jsx":"9","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickContestPage/QuickContestPage.jsx":"10","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/FeedbackPage/FeedbackPage.jsx":"11","/home/rasmus/Documents/Coding/swift-writer/src/utility/findStopsInText.js":"12","/home/rasmus/Documents/Coding/swift-writer/src/utility/wordsPerMinToUpdateTime.js":"13","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/WelcomeAnimation/WelcomeAnimation.jsx":"14","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/KeyboardContainer/KeyboardContainer.jsx":"15","/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/DesktopNavigation/DesktopNavigation.jsx":"16","/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/MobileNavigation/MobileNavigation.jsx":"17","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickContestPage/QuickContestSettings/QuickContestSettings.jsx":"18","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickPractisePage/QuckPractiseSettings/QuckPractiseSettings.jsx":"19","/home/rasmus/Documents/Coding/swift-writer/src/components/common/TextMarker/TextMarker.jsx":"20","/home/rasmus/Documents/Coding/swift-writer/src/components/common/HeaderAnimation/HeaderAnimation.jsx":"21","/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/NewKeyboard.jsx":"22","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/FormContainer/FormContainer.jsx":"23","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/ShortTextInput/ShortTextInput.jsx":"24","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/Divider/Divider.jsx":"25","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/formButtons/SubmitButton/SubmitButton.jsx":"26","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/formButtons/GoogleAuthButton/GoogleAuthButton.jsx":"27","/home/rasmus/Documents/Coding/swift-writer/src/components/common/newHands/LeftHand/LeftHand.jsx":"28","/home/rasmus/Documents/Coding/swift-writer/src/components/common/newHands/RightHand/RightHand.jsx":"29","/home/rasmus/Documents/Coding/swift-writer/src/utility/keyboards/swedish.js":"30","/home/rasmus/Documents/Coding/swift-writer/src/components/common/Checkboxes/Checkboxes.jsx":"31","/home/rasmus/Documents/Coding/swift-writer/src/components/common/RadioButton/RadioButton.jsx":"32","/home/rasmus/Documents/Coding/swift-writer/src/components/common/Checkbox/Checkbox.jsx":"33","/home/rasmus/Documents/Coding/swift-writer/src/components/common/Slider/CustomSlider1.jsx":"34","/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/RightHand/RightHand.jsx":"35","/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/LeftHand/LeftHand.jsx":"36","/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/PrimaryButton/PrimaryButton.jsx":"37","/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/SecondaryButton/SecondaryButton.jsx":"38","/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/keys/SmallKey/SmallKey.jsx":"39","/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/KeyboardRow/KeyboardRow.jsx":"40","/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/keys/MediumKey/MediumKey.jsx":"41","/home/rasmus/Documents/Coding/swift-writer/src/components/common/newHands/FingerIndicator/FingerIndicator.jsx":"42","/home/rasmus/Documents/Coding/swift-writer/src/components/Keyboards/Swedish/Windows/SweWinKeyboard.jsx":"43","/home/rasmus/Documents/Coding/swift-writer/src/utility/sliderStyles.js":"44","/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/FingerIndicator/FingerIndicator.jsx":"45","/home/rasmus/Documents/Coding/swift-writer/src/components/KeyBoard/Keyboard.jsx":"46","/home/rasmus/Documents/Coding/swift-writer/src/components/KeyBoard/Key/Key.jsx":"47"},{"size":1050,"mtime":1630522363416,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":1629361281635,"results":"50","hashOfConfig":"49"},{"size":1938,"mtime":1630522363408,"results":"51","hashOfConfig":"49"},{"size":823,"mtime":1630522363416,"results":"52","hashOfConfig":"49"},{"size":5160,"mtime":1630522363416,"results":"53","hashOfConfig":"49"},{"size":768,"mtime":1630522363412,"results":"54","hashOfConfig":"49"},{"size":2786,"mtime":1630522363416,"results":"55","hashOfConfig":"49"},{"size":2007,"mtime":1630522363416,"results":"56","hashOfConfig":"49"},{"size":1017,"mtime":1630522363416,"results":"57","hashOfConfig":"49"},{"size":809,"mtime":1630522363416,"results":"58","hashOfConfig":"49"},{"size":1067,"mtime":1630528771361,"results":"59","hashOfConfig":"49"},{"size":253,"mtime":1630522363432,"results":"60","hashOfConfig":"49"},{"size":546,"mtime":1630522363432,"results":"61","hashOfConfig":"49"},{"size":736,"mtime":1630522363416,"results":"62","hashOfConfig":"49"},{"size":3269,"mtime":1630522363416,"results":"63","hashOfConfig":"49"},{"size":1543,"mtime":1630522363412,"results":"64","hashOfConfig":"49"},{"size":218,"mtime":1630522363412,"results":"65","hashOfConfig":"49"},{"size":3242,"mtime":1630522363416,"results":"66","hashOfConfig":"49"},{"size":9357,"mtime":1630522363416,"results":"67","hashOfConfig":"49"},{"size":561,"mtime":1630522363412,"results":"68","hashOfConfig":"49"},{"size":1390,"mtime":1630522363412,"results":"69","hashOfConfig":"49"},{"size":5172,"mtime":1630522363412,"results":"70","hashOfConfig":"49"},{"size":1234,"mtime":1630522363416,"results":"71","hashOfConfig":"49"},{"size":636,"mtime":1630522363416,"results":"72","hashOfConfig":"49"},{"size":347,"mtime":1630522363416,"results":"73","hashOfConfig":"49"},{"size":283,"mtime":1630522363416,"results":"74","hashOfConfig":"49"},{"size":457,"mtime":1630522363416,"results":"75","hashOfConfig":"49"},{"size":2741,"mtime":1630528833200,"results":"76","hashOfConfig":"49"},{"size":2728,"mtime":1630528662046,"results":"77","hashOfConfig":"49"},{"size":5867,"mtime":1630522363432,"results":"78","hashOfConfig":"49"},{"size":338,"mtime":1630522363412,"results":"79","hashOfConfig":"49"},{"size":1394,"mtime":1630522363412,"results":"80","hashOfConfig":"49"},{"size":1005,"mtime":1630522363412,"results":"81","hashOfConfig":"49"},{"size":974,"mtime":1630522363412,"results":"82","hashOfConfig":"49"},{"size":1774,"mtime":1630522363412,"results":"83","hashOfConfig":"49"},{"size":1770,"mtime":1630522363412,"results":"84","hashOfConfig":"49"},{"size":973,"mtime":1630522363412,"results":"85","hashOfConfig":"49"},{"size":1065,"mtime":1630522363412,"results":"86","hashOfConfig":"49"},{"size":1250,"mtime":1630523305098,"results":"87","hashOfConfig":"49"},{"size":343,"mtime":1630522363412,"results":"88","hashOfConfig":"49"},{"size":442,"mtime":1630522363412,"results":"89","hashOfConfig":"49"},{"size":1525,"mtime":1630528137276,"results":"90","hashOfConfig":"49"},{"size":7802,"mtime":1630522363412,"results":"91","hashOfConfig":"49"},{"size":594,"mtime":1630522363432,"results":"92","hashOfConfig":"49"},{"size":1664,"mtime":1630522363412,"results":"93","hashOfConfig":"49"},{"size":1209,"mtime":1630522363412,"results":"94","hashOfConfig":"49"},{"size":6256,"mtime":1630522363412,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"4q3q7g",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"98"},"/home/rasmus/Documents/Coding/swift-writer/src/index.js",[],["208","209"],"/home/rasmus/Documents/Coding/swift-writer/src/reportWebVitals.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/App.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/contexts/LanguageContext.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/HomePage.jsx",["210"],"import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./homePage.module.scss\";\r\n\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport KeyboardContainer from \"./KeyboardContainer/KeyboardContainer\";\r\nimport WelcomeAnimation from \"./WelcomeAnimation/WelcomeAnimation\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport PlayIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\n\r\nimport findStopsInText from \"../../../utility/findStopsInText\";\r\nimport wordsPerMinToUpdateTime from \"../../../utility/wordsPerMinToUpdateTime\";\r\n\r\nconst PrettoSlider = withStyles({\r\n\troot: {\r\n\t\tcolor: \"#FE6E6E\",\r\n\t\theight: 10,\r\n\t},\r\n\tthumb: {\r\n\t\theight: 24,\r\n\t\twidth: 24,\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tborder: \"3px solid currentColor\",\r\n\t\tmarginTop: -8,\r\n\t\tmarginLeft: -12,\r\n\t\t\"&:focus, &:hover, &$active\": {\r\n\t\t\tboxShadow: \"inherit\",\r\n\t\t},\r\n\t},\r\n\tactive: {},\r\n\tvalueLabel: {\r\n\t\tleft: \"calc(-50% + 2px)\",\r\n\t},\r\n\ttrack: {\r\n\t\theight: 8,\r\n\t\tborderRadius: 0,\r\n\t},\r\n\trail: {\r\n\t\theight: 8,\r\n\t\tborderRadius: 0,\r\n\t},\r\n})(Slider);\r\n\r\nconst HomePage = () => {\r\n\tconst activateKeyHandler = (keyToActivate) => {\r\n\t\tsetActiveKey(keyToActivate);\r\n\t};\r\n\r\n\tconst fullWelcomeText =\r\n\t\t\"Welcome to SwiftWriter - an application made to help you type fast and properly!\";\r\n\tconst [welcomeText, setWelcomeText] = useState(\" \");\r\n\tconst [charIdx, setCharIdx] = useState(0);\r\n\tconst [stops, setStops] = useState(findStopsInText(fullWelcomeText));\r\n\tconst [wordsPerMinute, setWordsPerMinute] = useState(5);\r\n\tconst [updateTime, setUpdateTime] = useState(\r\n\t\twordsPerMinToUpdateTime(wordsPerMinute, fullWelcomeText)\r\n\t);\r\n\tconst [activeKey, setActiveKey] = useState();\r\n\tconst [allKeysActive, setAllKeysActive] = useState(true);\r\n\tconst [playAnimation, setPlayAnimation] = useState(true);\r\n\tconst [animationFinished, setAnimationFinished] = useState(false);\r\n\r\n\tconst allKeysActiveHandler = () => {\r\n\t\tsetAllKeysActive(!allKeysActive);\r\n\t};\r\n\r\n\tconst animationPlayingHandler = () => {\r\n\t\tsetPlayAnimation(!playAnimation);\r\n\t};\r\n\r\n\tconst getWordsPerMinute = (newWordsPerMinute) => {\r\n\t\tsetWordsPerMinute(newWordsPerMinute);\r\n\t\tsetUpdateTime(\r\n\t\t\twordsPerMinToUpdateTime(newWordsPerMinute, fullWelcomeText)\r\n\t\t);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (playAnimation) {\r\n\t\t\t\tif (stops.includes(charIdx)) {\r\n\t\t\t\t\tlet tempStops = [...stops];\r\n\t\t\t\t\ttempStops.shift();\r\n\t\t\t\t\tsetStops(tempStops);\r\n\t\t\t\t} else if (charIdx < fullWelcomeText.length) {\r\n\t\t\t\t\tlet newChar = fullWelcomeText.charAt(charIdx);\r\n\t\t\t\t\tactivateKeyHandler(newChar);\r\n\r\n\t\t\t\t\tif (charIdx === 0) {\r\n\t\t\t\t\t\tsetWelcomeText(newChar);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetWelcomeText(welcomeText.concat(newChar));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsetCharIdx(charIdx + 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetAnimationFinished(true);\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetWelcomeText(\" \");\r\n\t\t\t\t\t\tsetCharIdx(0);\r\n\t\t\t\t\t\tsetAnimationFinished(false);\r\n\t\t\t\t\t}, 2000);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, updateTime);\r\n\t}, [charIdx, stops, playAnimation]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.HomePageContainer}>\r\n\t\t\t<div className={classes.HomePage}>\r\n\t\t\t\t{/* <div>Solna weather: {weatherInSolna}</div> */}\r\n\r\n\t\t\t\t<WelcomeAnimation\r\n\t\t\t\t\twelcomeText={welcomeText}\r\n\t\t\t\t\tanimationFinished={animationFinished}\r\n\t\t\t\t\tplayAnimation={playAnimation}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<PrettoSlider\r\n\t\t\t\t\tdefaultValue={wordsPerMinute}\r\n\t\t\t\t\tgetAriaValueText={getWordsPerMinute}\r\n\t\t\t\t\taria-labelledby=\"discrete-slider\"\r\n\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\tstep={5}\r\n\t\t\t\t\tmarks\r\n\t\t\t\t\tmin={5}\r\n\t\t\t\t\tmax={100}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: \"500px\",\r\n\t\t\t\t\t\tmargin: \"20px auto 10px auto\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<p>\r\n\t\t\t\t\tWords per minute:{\" \"}\r\n\t\t\t\t\t<strong style={{ color: \"#FE6E6E\" }}>\r\n\t\t\t\t\t\t{wordsPerMinute}\r\n\t\t\t\t\t</strong>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<KeyboardContainer\r\n\t\t\t\t\tkeyboardType=\"swe-win\"\r\n\t\t\t\t\tactiveKey={activeKey}\r\n\t\t\t\t\tupdateTime={updateTime}\r\n\t\t\t\t\tallKeysActive={allKeysActive}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className={classes.settings}>\r\n\t\t\t\t\t<div className={classes.setting}>\r\n\t\t\t\t\t\t<mark className={classes.mappingText}>Animation</mark>\r\n\t\t\t\t\t\t<ToggleButtonGroup\r\n\t\t\t\t\t\t\tvalue={playAnimation}\r\n\t\t\t\t\t\t\texclusive\r\n\t\t\t\t\t\t\tonChange={animationPlayingHandler}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmargin: \"0 auto\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ToggleButton value={true}>\r\n\t\t\t\t\t\t\t\t<PlayIcon />\r\n\t\t\t\t\t\t\t</ToggleButton>\r\n\r\n\t\t\t\t\t\t\t<ToggleButton value={false}>\r\n\t\t\t\t\t\t\t\t<PauseIcon />\r\n\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t</ToggleButtonGroup>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className={classes.setting}>\r\n\t\t\t\t\t\t<mark className={classes.mappingText}>\r\n\t\t\t\t\t\t\tKey-finger mapping\r\n\t\t\t\t\t\t</mark>\r\n\t\t\t\t\t\t<ToggleButtonGroup\r\n\t\t\t\t\t\t\tvalue={allKeysActive}\r\n\t\t\t\t\t\t\texclusive\r\n\t\t\t\t\t\t\tonChange={allKeysActiveHandler}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmargin: \"0 auto\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ToggleButton value={true}>\r\n\t\t\t\t\t\t\t\t<div>Show</div>\r\n\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t<ToggleButton value={false}>\r\n\t\t\t\t\t\t\t\t<div>Hide</div>\r\n\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t</ToggleButtonGroup>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default HomePage;\r\n","/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/MainNavigation.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/pages/SignUpPage/SignUpPage.jsx",["211"],"import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./signUpPage.module.scss\";\r\n\r\nimport findStopsInText from \"../../../utility/findStopsInText\";\r\nimport wordsPerMinToUpdateTime from \"../../../utility/wordsPerMinToUpdateTime\";\r\n\r\nimport TextMarker from \"../../common/TextMarker/TextMarker\";\r\n\r\nimport SignUpForm from \"../../common/forms/FormContainer/FormContainer\";\r\nimport EmailInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\r\nimport UsernameInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\r\nimport PasswordInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\r\nimport RepeatPasswordInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\r\nimport SubmitButton from \"../../common/forms/formButtons/SubmitButton/SubmitButton\";\r\nimport OrDivider from \"../../common/forms/Divider/Divider\";\r\nimport GoogleSignUpButton from \"../../common/forms/formButtons/GoogleAuthButton/GoogleAuthButton\";\r\n\r\nconst SignUpPage = () => {\r\n\tconst fullHeaderText = \"Sign Up\";\r\n\tconst updateTime = wordsPerMinToUpdateTime(75, fullHeaderText);\r\n\r\n\tconst [headerText, setHeaderText] = useState(\" \");\r\n\tconst [stops, setStops] = useState(findStopsInText(fullHeaderText));\r\n\tconst [charIdx, setCharIdx] = useState(0);\r\n\tconst [animationFinished, setAnimationFinished] = useState(false);\r\n\tconst [showContent, setShowContent] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (stops.includes(charIdx)) {\r\n\t\t\t\tlet tempStops = [...stops];\r\n\t\t\t\ttempStops.shift();\r\n\t\t\t\tsetStops(tempStops);\r\n\t\t\t} else if (charIdx < fullHeaderText.length) {\r\n\t\t\t\tlet newChar = fullHeaderText.charAt(charIdx);\r\n\r\n\t\t\t\tif (charIdx === 0) {\r\n\t\t\t\t\tsetHeaderText(newChar);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetHeaderText(headerText.concat(newChar));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCharIdx(charIdx + 1);\r\n\t\t\t} else {\r\n\t\t\t\tsetAnimationFinished(true);\r\n\t\t\t}\r\n\t\t}, updateTime);\r\n\r\n\t\tsetShowContent(true);\r\n\t}, [charIdx, stops]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.SignUpPageContainer}>\r\n\t\t\t<div className={classes.SignUpPage}>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t{headerText}\r\n\t\t\t\t\t<TextMarker hide={animationFinished} />\r\n\t\t\t\t</h1>\r\n\r\n\t\t\t\t<SignUpForm show={showContent}>\r\n\t\t\t\t\t<EmailInput inputName=\"Email\" />\r\n\t\t\t\t\t<UsernameInput inputName=\"Username\" />\r\n\t\t\t\t\t<PasswordInput inputName=\"Password\" inputType=\"password\" />\r\n\t\t\t\t\t<RepeatPasswordInput\r\n\t\t\t\t\t\tinputName=\"Repeat Password\"\r\n\t\t\t\t\t\tinputType=\"password\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<SubmitButton\r\n\t\t\t\t\t\ttext=\"Create free account\"\r\n\t\t\t\t\t\t// onChange = {e => e.preventDefault()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<OrDivider text=\"or\" />\r\n\t\t\t\t\t<GoogleSignUpButton\r\n\t\t\t\t\t\ttext=\"Sign up with Google\"\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tconsole.log(\"User wants to sign up with Google!\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</SignUpForm>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignUpPage;\r\n","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/SignInPage/SignInPage.jsx",["212","213","214","215","216","217","218"],"import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./signInPage.module.scss\";\r\nimport SWLogo from \"../../../resources/icons/SWLogo.svg\";\r\n\r\nimport findStopsInText from \"../../../utility/findStopsInText\";\r\nimport wordsPerMinToUpdateTime from \"../../../utility/wordsPerMinToUpdateTime\";\r\n\r\nimport TextMarker from \"../../common/TextMarker/TextMarker\";\r\n\r\nimport SignInForm from \"../../common/forms/FormContainer/FormContainer\";\r\nimport EmailInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\r\nimport UsernameInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\r\nimport PasswordInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\r\nimport RepeatPasswordInput from \"../../common/forms/ShortTextInput/ShortTextInput\";\r\nimport SubmitButton from \"../../common/forms/formButtons/SubmitButton/SubmitButton\";\r\nimport OrDivider from \"../../common/forms/Divider/Divider\";\r\nimport GoogleSignUpButton from \"../../common/forms/formButtons/GoogleAuthButton/GoogleAuthButton\";\r\nimport HeaderAnimation from \"../../common/HeaderAnimation/HeaderAnimation\";\r\n\r\nconst SignUpPage = () => {\r\n\tconst [showContent, setShowContent] = useState(false);\r\n\r\n\tconst showContentHandler = (newShowContent) => {\r\n\t\tsetShowContent(newShowContent);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.SignInPageContainer}>\r\n\t\t\t<div className={classes.SignInPage}>\r\n\t\t\t\t<HeaderAnimation\r\n\t\t\t\t\theaderText=\"Quick Contest\"\r\n\t\t\t\t\tshowContentHandler={showContentHandler}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<SignInForm show={showContent}>\r\n\t\t\t\t\t<EmailInput inputName=\"Email or Username\" />\r\n\t\t\t\t\t<PasswordInput inputName=\"Password\" inputType=\"password\" />\r\n\r\n\t\t\t\t\t<SubmitButton\r\n\t\t\t\t\t\ttext=\"Sign in\"\r\n\t\t\t\t\t\t// onChange = {e => e.preventDefault()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<OrDivider text=\"or\" />\r\n\t\t\t\t\t<GoogleSignUpButton\r\n\t\t\t\t\t\ttext=\"Sign in with Google\"\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tconsole.log(\"User wants to sign in with Google!\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</SignInForm>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignUpPage;\r\n","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickPractisePage/QuickPractisePage.jsx",["219","220","221","222"],"import React, { useEffect, useState } from \"react\";\r\nimport classes from \"./quickPractisePage.module.scss\";\r\n\r\nimport findStopsInText from \"../../../utility/findStopsInText\";\r\nimport wordsPerMinToUpdateTime from \"../../../utility/wordsPerMinToUpdateTime\";\r\n\r\nimport TextMarker from \"../../common/TextMarker/TextMarker\";\r\nimport QuickPractiseSettings from \"./QuckPractiseSettings/QuckPractiseSettings\";\r\nimport HeaderAnimation from \"../../common/HeaderAnimation/HeaderAnimation\";\r\n\r\nconst QuickPractisePage = () => {\r\n\tconst [showContent, setShowContent] = useState(false);\r\n\r\n\tconst showContentHandler = (newShowContent) => {\r\n\t\tsetShowContent(newShowContent);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.QuickPractisePageContainer}>\r\n\t\t\t<div className={classes.QuickPractisePage}>\r\n\t\t\t\t<HeaderAnimation\r\n\t\t\t\t\theaderText=\"Quick Practice\"\r\n\t\t\t\t\tshowContentHandler={showContentHandler}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<QuickPractiseSettings showForm={showContent} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuickPractisePage;\r\n","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickContestPage/QuickContestPage.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/pages/FeedbackPage/FeedbackPage.jsx",["223"],"/home/rasmus/Documents/Coding/swift-writer/src/utility/findStopsInText.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/utility/wordsPerMinToUpdateTime.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/WelcomeAnimation/WelcomeAnimation.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/pages/HomePage/KeyboardContainer/KeyboardContainer.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/DesktopNavigation/DesktopNavigation.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/MainNavigation/MobileNavigation/MobileNavigation.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickContestPage/QuickContestSettings/QuickContestSettings.jsx",["224","225"],"import React, { useState } from 'react';\r\nimport classes from './quickContestSettings.module.scss';\r\n\r\nimport QuickContestForm from '../../../common/forms/FormContainer/FormContainer';\r\nimport TypeOfContestRadioButtons from '../../../common/Checkboxes/Checkboxes';\r\nimport RadioButton from '../../../common/RadioButton/RadioButton';\r\nimport StartContestButton from '../../../common/forms/formButtons/SubmitButton/SubmitButton';\r\n\r\nconst QuickContestSettings = ({showForm}) => {\r\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n    const [typeOfContest, setTypeOfContest] = useState({\r\n        \"Standard\": true,\r\n        \"With friends\": false\r\n    })\r\n    const [contestMode, setContestMode] = useState({\r\n        \"Ranked\": false,\r\n        \"Casual\": true\r\n    });\r\n    \r\n\r\n    const typeOfContestHandler = (newContestType) => {\r\n        let tempTypeOfContest = {...typeOfContest};\r\n        let typeOfContestKeys = Object.keys(tempTypeOfContest);\r\n\r\n        typeOfContestKeys.forEach(contestType => {\r\n            tempTypeOfContest[contestType] = false\r\n        })\r\n\r\n        tempTypeOfContest[newContestType] = true;\r\n        setTypeOfContest(tempTypeOfContest);\r\n    }\r\n\r\n    const contestModeHandler = (newContestMode) => {\r\n        if (userLoggedIn) {\r\n            let tempContestMode = {...contestMode};\r\n            let contestModeKeys = Object.keys(tempContestMode);\r\n    \r\n            contestModeKeys.forEach(contestMode => {\r\n                tempContestMode[contestMode] = false\r\n            })\r\n    \r\n            tempContestMode[newContestMode] = true;\r\n            setContestMode(tempContestMode);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <QuickContestForm \r\n            show = {showForm}\r\n            width = \"290px\"\r\n        >\r\n            <TypeOfContestRadioButtons title=\"Type of contest\">\r\n                <RadioButton \r\n                    name = 'Standard'\r\n                    isChecked = {typeOfContest['Standard']}\r\n                    checkboxHandler = {typeOfContestHandler}\r\n                    colorTheme = \"light\"\r\n                />\r\n\r\n                <RadioButton \r\n                    name = 'With friends'\r\n                    isChecked = {typeOfContest['With friends']}\r\n                    checkboxHandler = {typeOfContestHandler}\r\n                    colorTheme = \"light\"\r\n                />\r\n            </TypeOfContestRadioButtons>\r\n\r\n            <TypeOfContestRadioButtons title=\"Contest mode\">\r\n                <RadioButton \r\n                    name = 'Ranked'\r\n                    isChecked = {contestMode['Ranked']}\r\n                    checkboxHandler = {contestModeHandler}\r\n                    colorTheme = \"light\"\r\n                    disableMsg = \"Log in required\"\r\n                    disable = {true}\r\n                />\r\n\r\n                <RadioButton \r\n                    name = 'Casual'\r\n                    isChecked = {contestMode['Casual']}\r\n                    checkboxHandler = {contestModeHandler}\r\n                    colorTheme = \"light\"\r\n                />\r\n            </TypeOfContestRadioButtons>\r\n\r\n            <StartContestButton\r\n                text = \"Start contest\"\r\n            />\r\n        </QuickContestForm>\r\n    )\r\n}\r\n\r\nexport default QuickContestSettings;","/home/rasmus/Documents/Coding/swift-writer/src/components/pages/QuickPractisePage/QuckPractiseSettings/QuckPractiseSettings.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/TextMarker/TextMarker.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/HeaderAnimation/HeaderAnimation.jsx",["226","227"],"import React, { useEffect, useState } from \"react\";\r\nimport findStopsInText from \"../../../utility/findStopsInText\";\r\nimport wordsPerMinToUpdateTime from \"../../../utility/wordsPerMinToUpdateTime\";\r\nimport classes from \"./headerAnimation.module.scss\";\r\nimport TextMarker from \"../TextMarker/TextMarker\";\r\n\r\nconst HeaderAnimation = ({ headerText, showContentHandler }) => {\r\n\tconst updateTime = wordsPerMinToUpdateTime(50, headerText);\r\n\r\n\tconst [currentHeaderText, setCurrentHeaderText] = useState(\" \");\r\n\tconst [stops, setStops] = useState(findStopsInText(headerText));\r\n\tconst [charIdx, setCharIdx] = useState(0);\r\n\tconst [animationFinished, setAnimationFinished] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (stops.includes(charIdx)) {\r\n\t\t\t\tlet tempStops = [...stops];\r\n\t\t\t\ttempStops.shift();\r\n\t\t\t\tsetStops(tempStops);\r\n\t\t\t} else if (charIdx < headerText.length) {\r\n\t\t\t\tlet newChar = headerText.charAt(charIdx);\r\n\r\n\t\t\t\tif (charIdx === 0) {\r\n\t\t\t\t\tsetCurrentHeaderText(newChar);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetCurrentHeaderText(currentHeaderText.concat(newChar));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCharIdx(charIdx + 1);\r\n\t\t\t} else {\r\n\t\t\t\tsetAnimationFinished(true);\r\n\t\t\t}\r\n\t\t}, updateTime);\r\n\r\n\t\tshowContentHandler(true);\r\n\t}, [charIdx, stops]);\r\n\r\n\treturn (\r\n\t\t<h1>\r\n\t\t\t{currentHeaderText}\r\n\t\t\t<TextMarker hide={animationFinished} />\r\n\t\t</h1>\r\n\t);\r\n};\r\n\r\nexport default HeaderAnimation;\r\n","/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/NewKeyboard.jsx",["228","229","230","231"],"import React from \"react\";\r\nimport classes from \"./newKeyboard.module.scss\";\r\nimport keyClasses from \"./keys/commonKeysClasses.module.scss\";\r\n\r\nimport SmallKey from \"./keys/SmallKey/SmallKey\";\r\n\r\nimport Row from \"./KeyboardRow/KeyboardRow\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport MediumKey from \"./keys/MediumKey/MediumKey\";\r\n\r\nimport { swedishKeyboard } from \"../../../utility/keyboards/swedish\";\r\n\r\nconst NewKeyboard = () => {\r\n\tconst keyboardRef = useRef(null);\r\n\r\n\tconst numKeyRows = swedishKeyboard.keysInRow.length;\r\n\r\n\tconst keysKeys = Object.keys(swedishKeyboard.keys);\r\n\r\n\tlet initActiveKeys = {};\r\n\r\n\tkeysKeys.forEach((keyKey) => {\r\n\t\tinitActiveKeys[keyKey] = false;\r\n\t});\r\n\r\n\tconst [activeKeys, setActiveKeys] = useState(initActiveKeys);\r\n\r\n\tconst [keyDistance, setKeyDistance] = useState(0);\r\n\tconst [rowHeight, setRowHeight] = useState(0);\r\n\tconst [keyboardPadding, setKeyboardPadding] = useState(0);\r\n\tconst [keyPadding, setKeyPadding] = useState(0);\r\n\tconst [keyboardDim, setKeyboardDim] = useState({\r\n\t\theight: 0,\r\n\t\twidth: 0,\r\n\t});\r\n\r\n\tconst handleResize = () => {\r\n\t\tconst newKeyboardDim = {\r\n\t\t\theight: keyboardRef.current.offsetHeight,\r\n\t\t\twidth: keyboardRef.current.offsetWidth,\r\n\t\t};\r\n\r\n\t\tlet newKeyboardPadding = newKeyboardDim.width / 50;\r\n\t\tlet newKeyDistance = newKeyboardDim.width / 105;\r\n\t\tlet newRowHeight =\r\n\t\t\t(newKeyboardDim.height -\r\n\t\t\t\t(numKeyRows - 1) * newKeyDistance -\r\n\t\t\t\t2 * newKeyboardPadding) /\r\n\t\t\tnumKeyRows;\r\n\t\tlet newKeyPadding = newKeyboardDim.width / 280;\r\n\r\n\t\tsetKeyDistance(newKeyDistance);\r\n\t\tsetKeyboardPadding(newKeyboardPadding);\r\n\t\tsetRowHeight(newRowHeight);\r\n\t\tsetKeyboardDim(newKeyboardDim);\r\n\t\tsetKeyPadding(newKeyPadding);\r\n\t};\r\n\r\n\tconst handleMutate = () => {\r\n\t\tconst keyboardDimInit = {\r\n\t\t\theight: keyboardRef.current.offsetHeight,\r\n\t\t\twidth: keyboardRef.current.offsetWidth,\r\n\t\t};\r\n\r\n\t\tlet newKeyboardPadding = keyboardDimInit.width / 50;\r\n\t\tlet newKeyDistance = keyboardDimInit.width / 105;\r\n\t\tlet newRowHeight =\r\n\t\t\t(keyboardDimInit.height -\r\n\t\t\t\t(numKeyRows - 1) * newKeyDistance -\r\n\t\t\t\t2 * newKeyboardPadding) /\r\n\t\t\tnumKeyRows;\r\n\t\tlet newKeyPadding = keyboardDimInit.width / 280;\r\n\r\n\t\tsetKeyboardPadding(newKeyboardPadding);\r\n\t\tsetKeyDistance(newKeyDistance);\r\n\t\tsetRowHeight(newRowHeight);\r\n\t\tsetKeyboardDim(keyboardDimInit);\r\n\t\tsetKeyPadding(newKeyPadding);\r\n\t};\r\n\r\n\tconst activateKey = (char) => {};\r\n\r\n\tuseEffect(() => {\r\n\t\thandleResize();\r\n\r\n\t\tlet observer = new MutationObserver(handleMutate);\r\n\t\tlet config = { attributes: true, childList: true, characterData: true };\r\n\t\tobserver.observe(keyboardRef.current, config);\r\n\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", handleResize);\r\n\t\t\tobserver.disconnect();\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={classes.NewKeyboard}\r\n\t\t\tref={keyboardRef}\r\n\t\t\tstyle={{\r\n\t\t\t\tfontSize: keyboardDim.width / 60,\r\n\t\t\t\theight: keyboardDim.width / 2.8,\r\n\t\t\t\tpadding: keyboardPadding,\r\n\t\t\t\tpaddingTop: keyboardPadding - keyDistance,\r\n\t\t\t\tpaddingLeft: keyboardPadding - keyDistance,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{swedishKeyboard.keysInRow.map((numKeysInRow, idx) => {\r\n\t\t\t\tconst numKeysInRowArray = Array.from(\r\n\t\t\t\t\t{ length: numKeysInRow },\r\n\t\t\t\t\t(v, k) => k\r\n\t\t\t\t);\r\n\r\n\t\t\t\tlet numPrevKeys = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < idx; i++) {\r\n\t\t\t\t\tnumPrevKeys += swedishKeyboard.keysInRow[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Row keyDistance={keyDistance} rowHeight={rowHeight}>\r\n\t\t\t\t\t\t{numKeysInRowArray.map((keyIdx) => {\r\n\t\t\t\t\t\t\tlet totIdx = numPrevKeys + keyIdx;\r\n\t\t\t\t\t\t\tlet keyKey = keysKeys[totIdx];\r\n\t\t\t\t\t\t\tlet keyObj = swedishKeyboard.keys[keyKey];\r\n\r\n\t\t\t\t\t\t\tlet keyClass;\r\n\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tkeyObj.finger === \"pinkyL\" ||\r\n\t\t\t\t\t\t\t\tkeyObj.finger === \"indexR\"\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tkeyClass = keyClasses.redKey;\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tkeyObj.finger === \"ringL\" ||\r\n\t\t\t\t\t\t\t\tkeyObj.finger === \"middleR\"\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tkeyClass = keyClasses.blueKey;\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tkeyObj.finger === \"middleL\" ||\r\n\t\t\t\t\t\t\t\tkeyObj.finger === \"ringR\"\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tkeyClass = keyClasses.orangeKey;\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\tkeyObj.finger === \"indexL\" ||\r\n\t\t\t\t\t\t\t\tkeyObj.finger === \"pinkyR\"\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tkeyClass = keyClasses.greenKey;\r\n\t\t\t\t\t\t\t} else if (keyObj.finger === \"thumb\") {\r\n\t\t\t\t\t\t\t\tkeyClass = keyClasses.purpleKey;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (keyObj.keyType === \"small\") {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<SmallKey\r\n\t\t\t\t\t\t\t\t\t\tchars={keyObj.chars}\r\n\t\t\t\t\t\t\t\t\t\textraClasses={[keyClass]}\r\n\t\t\t\t\t\t\t\t\t\trowHeight={rowHeight}\r\n\t\t\t\t\t\t\t\t\t\tkeyDistance={keyDistance}\r\n\t\t\t\t\t\t\t\t\t\tkeyPadding={keyPadding}\r\n\t\t\t\t\t\t\t\t\t\tmarker={keyObj.marker}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else if (keyObj.keyType === \"medium\") {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<MediumKey\r\n\t\t\t\t\t\t\t\t\t\tchars={keyObj.chars}\r\n\t\t\t\t\t\t\t\t\t\trowHeight={rowHeight}\r\n\t\t\t\t\t\t\t\t\t\textraClasses={[keyClass]}\r\n\t\t\t\t\t\t\t\t\t\tkeyDistance={keyDistance}\r\n\t\t\t\t\t\t\t\t\t\tkeyPadding={keyPadding}\r\n\t\t\t\t\t\t\t\t\t\tkeyWidth={rowHeight * keyObj.scaler}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewKeyboard;\r\n","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/FormContainer/FormContainer.jsx",["232","233"],"import React from 'react';\r\nimport classes from './formContainer.module.scss';\r\n\r\nimport SWLogo from '../../../../resources/icons/SWLogo.svg';\r\n\r\nconst FormContainer = ({show, children, logo, width=\"auto\"}) => {\r\n    let formLogo = null;\r\n\r\n    if (logo === \"none\") {\r\n        formLogo = null;\r\n    } else if (logo !== undefined) {\r\n        formLogo = <img \r\n            src={logo} \r\n            style = {{\r\n                \"marginBottom\": \"20px\"\r\n            }}\r\n        />\r\n    } else {\r\n        formLogo = <img \r\n            src={SWLogo} \r\n            style = {{\r\n                \"marginBottom\": \"20px\"\r\n            }}\r\n        />\r\n    }\r\n\r\n    let formClasses = [classes.FormContainer];\r\n\r\n    if (!show) {\r\n        formClasses.push(classes.hideForm);\r\n    }\r\n\r\n    if (width !== \"auto\") {\r\n\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={formClasses.join(\" \")}\r\n            style = {{\r\n                \"marginTop\": logo === \"none\" ? \"20px\" : \"60px\",\r\n                \"paddingTop\": logo === \"none\" ? \"20px\" : \"0\",\r\n                \"width\": width !== \"auto\" ? width : \"fitContent\"\r\n            }}\r\n        >\r\n            {formLogo}\r\n\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormContainer;","/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/ShortTextInput/ShortTextInput.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/Divider/Divider.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/formButtons/SubmitButton/SubmitButton.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/forms/formButtons/GoogleAuthButton/GoogleAuthButton.jsx",["234"],"import React from \"react\";\r\nimport classes from \"./googleAuthButton.module.scss\";\r\n\r\nimport googleIcon from \"../../../../../resources/icons/googleIcon.svg\";\r\n\r\nconst GoogleAuthButton = ({ text, onClickHandler }) => {\r\n\treturn (\r\n\t\t<button onClick={onClickHandler} className={classes.GoogleAuthButton}>\r\n\t\t\t<div className={classes.iconContainer}>\r\n\t\t\t\t<img src={googleIcon} />\r\n\t\t\t</div>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default GoogleAuthButton;\r\n","/home/rasmus/Documents/Coding/swift-writer/src/components/common/newHands/LeftHand/LeftHand.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/newHands/RightHand/RightHand.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/utility/keyboards/swedish.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/Checkboxes/Checkboxes.jsx",["235"],"import React from 'react';\r\nimport classes from './checkboxes.module.scss';\r\nimport Checkbox from '../Checkbox/Checkbox';\r\n\r\nconst Checkboxes = ({children, title}) => {\r\n    return (\r\n        <div className={classes.Checkboxes}>\r\n            <h4>{title}</h4>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkboxes;","/home/rasmus/Documents/Coding/swift-writer/src/components/common/RadioButton/RadioButton.jsx",["236","237"],"import React from 'react';\r\n\r\nimport classes from './radioButton.module.scss';\r\n\r\nconst Checkbox = ({name, isChecked, checkboxHandler, colorTheme, disable=false, disableMsg=\"\"}) => {\r\n    let searchClass, \r\n        textClass = classes.text;\r\n\r\n\r\n    if (colorTheme == 'dark') {\r\n        searchClass = classes.darkStyling;\r\n    } else if (colorTheme == 'light') {\r\n        searchClass = classes.lightStyling;\r\n    }\r\n\r\n    if (isChecked) {\r\n        textClass = classes.checkedText;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.radioButtonContainer}>\r\n            <label \r\n                className = {searchClass} \r\n                key = {name}\r\n                style = {{\r\n                    \"cursor\": !isChecked && !disable ? \"pointer\" : \"default\",\r\n                    \"opacity\": disable ? \"0.35\" : \"1\"\r\n                }}\r\n            >\r\n                <input\r\n                    name={name}\r\n                    type=\"checkbox\"\r\n                    checked={isChecked}\r\n                    onClick={() => checkboxHandler(name)}\r\n                />\r\n\r\n                <span className={classes.checkmark}></span>\r\n                <span className={textClass}>{name}</span>\r\n                \r\n                <br />\r\n            </label>\r\n            {disable ? <span className={classes.disableMsg}>{disableMsg}</span> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox;","/home/rasmus/Documents/Coding/swift-writer/src/components/common/Checkbox/Checkbox.jsx",["238","239"],"import React from 'react';\r\n\r\nimport classes from './checkbox.module.scss';\r\n\r\nconst Checkbox = ({name, isChecked, checkboxHandler, colorTheme, disable=false}) => {\r\n    let searchClass;\r\n\r\n\r\n    if (colorTheme == 'dark') {\r\n        searchClass = classes.darkStyling;\r\n    } else if (colorTheme == 'light') {\r\n        searchClass = classes.lightStyling;\r\n    }\r\n\r\n    return (\r\n        <label \r\n            className = {searchClass} \r\n            key = {name}\r\n            style = {{\r\n                \"cursor\": disable ? \"default\" : \"pointer\",\r\n                \"opacity\": disable ? \"0.35\" : \"1\"\r\n            }}\r\n        >\r\n            <input\r\n                name={name}\r\n                type=\"checkbox\"\r\n                checked={isChecked}\r\n                onChange={() => checkboxHandler(name)}\r\n            />\r\n\r\n            <span className={classes.checkmark}></span>\r\n            <span className={classes.text}>{name}</span>\r\n            <br />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Checkbox;","/home/rasmus/Documents/Coding/swift-writer/src/components/common/Slider/CustomSlider1.jsx",["240"],"import React from 'react';\r\nimport classes from './customSlider1.module.scss';\r\n\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { discreteMSlider } from '../../../utility/sliderStyles';\r\n\r\nconst PrettoSlider = withStyles(discreteMSlider)(Slider);\r\n\r\nconst CustomSlider1 = ({\r\n    sliderValue, \r\n    valueChangeHandler, \r\n    minVal, \r\n    maxVal, \r\n    stepSize,\r\n    sliderWidth = \"100%\",\r\n    sliderMargin = \"0\"\r\n}) => {\r\n\r\n    return (\r\n        <PrettoSlider\r\n            defaultValue={sliderValue}\r\n            getAriaValueText={valueChangeHandler}\r\n            aria-labelledby=\"discrete-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            step={stepSize}\r\n            marks\r\n            min={minVal}\r\n            max={maxVal}\r\n            style= {{\r\n                \"width\": sliderWidth,\r\n                \"margin\": sliderMargin\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default CustomSlider1;","/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/RightHand/RightHand.jsx",["241"],"import React from 'react';\r\nimport classes from './rightHand.module.scss';\r\nimport rightHandImg from '../../../resources/images/rightHand.png';\r\n\r\nimport FingerIndicator from '../FingerIndicator/FingerIndicator';\r\n\r\nconst RightHand = ({highlightedFingers, updateTime, extraClass}) => {\r\n    let handClasses = [classes.RightHand];\r\n\r\n    if (extraClass !== undefined) {\r\n        handClasses.push(extraClass);\r\n    }\r\n    return (\r\n        <div className={handClasses.join(\" \")}>\r\n            <FingerIndicator \r\n                color=\"purple\" \r\n                top = \"98px\"\r\n                left = \"-9px\"\r\n                show = {highlightedFingers[\"thumbR\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"red\" \r\n                top = \"-2px\"\r\n                left = \"51px\"\r\n                show = {highlightedFingers[\"indexR\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"blue\" \r\n                top = \"-10px\"\r\n                left = \"95px\"\r\n                show = {highlightedFingers[\"middleR\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"orange\" \r\n                top = \"-1px\"\r\n                left = \"139px\"\r\n                show = {highlightedFingers[\"ringR\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"green\" \r\n                top = \"50px\"\r\n                left = \"178px\"\r\n                show = {highlightedFingers[\"pinkyR\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <img src={rightHandImg} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightHand;","/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/LeftHand/LeftHand.jsx",["242"],"import React from 'react';\r\nimport classes from './leftHand.module.scss';\r\n\r\nimport leftHandImg from '../../../resources/images/leftHand.png';\r\nimport FingerIndicator from '../FingerIndicator/FingerIndicator';\r\n\r\nconst LeftHand = ({highlightedFingers, updateTime, extraClass}) => {\r\n    let handClasses = [classes.LeftHand];\r\n\r\n    if (extraClass !== undefined) {\r\n        handClasses.push(extraClass);\r\n    }\r\n\r\n    return (\r\n        <div className={handClasses.join(\" \")}>\r\n            <FingerIndicator \r\n                color=\"red\" \r\n                top = \"50px\"\r\n                left = \"-11px\"\r\n                show = {highlightedFingers[\"pinkyL\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"blue\" \r\n                top = \"-2px\"\r\n                left = \"28px\"\r\n                show = {highlightedFingers[\"ringL\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"orange\" \r\n                top = \"-10px\"\r\n                left = \"72px\"\r\n                show = {highlightedFingers[\"middleL\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"green\" \r\n                top = \"0px\"\r\n                left = \"116px\"\r\n                show = {highlightedFingers[\"indexL\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <FingerIndicator \r\n                color=\"purple\" \r\n                top = \"100px\"\r\n                left = \"175px\"\r\n                show = {highlightedFingers[\"thumbL\"]}\r\n                updateTime = {updateTime}\r\n            />\r\n\r\n            <img src={leftHandImg} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftHand;","/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/PrimaryButton/PrimaryButton.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/buttons/SecondaryButton/SecondaryButton.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/keys/SmallKey/SmallKey.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/KeyboardRow/KeyboardRow.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/NewKeyboard/keys/MediumKey/MediumKey.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/common/newHands/FingerIndicator/FingerIndicator.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/Keyboards/Swedish/Windows/SweWinKeyboard.jsx",["243"],"import React from \"react\";\r\nimport classes from \"./sweWinKeyboard.module.scss\";\r\n\r\nimport Keyboard from \"../../../KeyBoard/Keyboard\";\r\n\r\nconst SweWinKeyboard = ({\r\n\tkeyEnter,\r\n\tkeyLeave,\r\n\tclearIndicators,\r\n\tactiveKey,\r\n\tupdateTime,\r\n\tallKeysActive,\r\n\textraClass,\r\n}) => {\r\n\tconst defaultWidth = \"50px\";\r\n\tlet sweWinKeys = [\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tchar: \"§\",\r\n\t\t\t\tshiftChar: \"½\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"1\",\r\n\t\t\t\tshiftChar: \"!\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"2\",\r\n\t\t\t\tshiftChar: '\"',\r\n\t\t\t\taltGrChar: \"@\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"ringL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"3\",\r\n\t\t\t\tshiftChar: \"#\",\r\n\t\t\t\taltGrChar: \"£\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"middleL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"4\",\r\n\t\t\t\tshiftChar: \"¤\",\r\n\t\t\t\taltGrChar: \"$\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"5\",\r\n\t\t\t\tshiftChar: \"%\",\r\n\t\t\t\taltGrChar: \"€\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"6\",\r\n\t\t\t\tshiftChar: \"&\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"7\",\r\n\t\t\t\tshiftChar: \"/\",\r\n\t\t\t\taltGrChar: \"{\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"8\",\r\n\t\t\t\tshiftChar: \"(\",\r\n\t\t\t\taltGrChar: \"[\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"middleR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"9\",\r\n\t\t\t\tshiftChar: \")\",\r\n\t\t\t\taltGrChar: \"]\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"ringR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"0\",\r\n\t\t\t\tshiftChar: \"=\",\r\n\t\t\t\taltGrChar: \"}\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"+\",\r\n\t\t\t\tshiftChar: \"?\",\r\n\t\t\t\taltGrChar: \"\\\\\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"´\",\r\n\t\t\t\tshiftChar: \"`\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"← Back\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"85px\",\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tchar: \"Tab ↹\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"75px\",\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"Q\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"W\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"ringL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"E\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"€\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"middleL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"R\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"T\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"Y\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"U\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"I\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"middleR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"O\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"ringR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"P\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"Å\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"¨\",\r\n\t\t\t\tshiftChar: \"^\",\r\n\t\t\t\taltGrChar: \"~\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tchar: \"CapsLock\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"85px\",\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"A\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"S\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"ringL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"D\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"middleL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"F\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"G\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"H\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"J\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"K\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"middleR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"L\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"ringR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"Ö\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"Ä\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"'\",\r\n\t\t\t\tshiftChar: \"*\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"↲ Enter\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"75px\",\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tchar: \"⇧ Shift\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"75px\",\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"<\",\r\n\t\t\t\tshiftChar: \">\",\r\n\t\t\t\taltGrChar: \"|\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"Z\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"X\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"ringL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"C\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"middleL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"V\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"B\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"N\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"M\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"µ\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"indexR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \",\",\r\n\t\t\t\tshiftChar: \";\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"middleR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \".\",\r\n\t\t\t\tshiftChar: \":\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"ringR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"-\",\r\n\t\t\t\tshiftChar: \"_\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: defaultWidth,\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"⇧ Shift\",\r\n\t\t\t\tshiftChar: \"_\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"85px\",\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t],\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tchar: \"Ctrl\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"85px\",\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"win\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"51px\",\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"Alt\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"85px\",\r\n\t\t\t\tfinger: \"pinkyL\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"Space\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"350px\",\r\n\t\t\t\tfinger: \"thumbR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"Alt Gr\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"85px\",\r\n\t\t\t\tfinger: \"ringR\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tchar: \"Fn\",\r\n\t\t\t\tshiftChar: \"\",\r\n\t\t\t\taltGrChar: \"\",\r\n\t\t\t\twidth: \"85px\",\r\n\t\t\t\tfinger: \"pinkyR\",\r\n\t\t\t},\r\n\t\t],\r\n\t];\r\n\r\n\treturn (\r\n\t\t<Keyboard\r\n\t\t\tkeys={sweWinKeys}\r\n\t\t\tkeyEnter={keyEnter}\r\n\t\t\tkeyLeave={keyLeave}\r\n\t\t\tclearIndicators={clearIndicators}\r\n\t\t\tactiveKey={activeKey}\r\n\t\t\tupdateTime={updateTime}\r\n\t\t\tallKeysActive={allKeysActive}\r\n\t\t\textraClass={extraClass}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SweWinKeyboard;\r\n","/home/rasmus/Documents/Coding/swift-writer/src/utility/sliderStyles.js",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/Hands/FingerIndicator/FingerIndicator.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/KeyBoard/Keyboard.jsx",[],"/home/rasmus/Documents/Coding/swift-writer/src/components/KeyBoard/Key/Key.jsx",["244"],"import React from 'react';\r\nimport classes from './key.module.scss';\r\n\r\nconst Key = ({\r\n    char, \r\n    shiftChar, \r\n    altChar, \r\n    width, \r\n    finger, \r\n    keyLeave,\r\n    keyEnter,\r\n    updateTime,\r\n    allKeysActive,\r\n    active=false\r\n}) => {\r\n    let keyWidth, \r\n        BGColor, \r\n        borderColor,\r\n        hasMarker,\r\n        keyMarkerClass,\r\n        activeKeyColor,\r\n        keyClasses;\r\n    \r\n    const fingerColorMap = {\r\n        \"pinkyL\": \"red\",\r\n        \"ringL\": \"blue\",\r\n        \"middleL\": \"orange\",\r\n        \"indexL\": \"green\",\r\n        \"thumbL\": \"purple\",\r\n        \"thumbR\": \"purple\",\r\n        \"indexR\": \"red\",\r\n        \"middleR\": \"blue\",\r\n        \"ringR\": \"orange\",\r\n        \"pinkyR\": \"green\",\r\n    };\r\n\r\n    activeKeyColor = fingerColorMap[finger];\r\n    keyClasses = [classes.Key];\r\n\r\n    if (activeKeyColor === \"red\") {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.redActive);\r\n            borderColor = \"#BF5252\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.redKey);\r\n            borderColor = \"#BF5252\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.redHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.redKey);\r\n            borderColor = \"#BF5252\";\r\n        }\r\n    } else if (activeKeyColor === \"blue\") {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.blueActive);\r\n            borderColor = \"#5289BF\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.blueKey);\r\n            borderColor = \"#5289BF\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.blueHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.blueKey);\r\n            borderColor = \"#5289BF\";\r\n        }\r\n    }  else if (activeKeyColor === \"green\") {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.greenActive);\r\n            borderColor = \"#439957\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.greenKey);\r\n            borderColor = \"#439957\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.greenHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.greenKey);\r\n            borderColor = \"#439957\";\r\n        }\r\n    }  else if (activeKeyColor === \"orange\") {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.orangeActive);\r\n            borderColor = \"#BF9452\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.orangeKey);\r\n            borderColor = \"#BF9452\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.orangeHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.orangeKey);\r\n            borderColor = \"#BF9452\";\r\n        }\r\n    }  else if (activeKeyColor === \"purple\") {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.purpleActive);\r\n            borderColor = \"#9752BF\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.purpleKey);\r\n            borderColor = \"#9752BF\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.purpleHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.purpleKey);\r\n            borderColor = \"#9752BF\";\r\n        }\r\n    } else {\r\n        if (allKeysActive && active) {\r\n            keyClasses.push(classes.grayActive);\r\n            borderColor = \"#777777\";\r\n        } else if (allKeysActive) {\r\n            keyClasses.push(classes.grayKey);\r\n            borderColor = \"#777777\";\r\n        } else if (!active) {\r\n            keyClasses.push(classes.inActiveKey, classes.grayHover);\r\n            borderColor = \"#777777\";\r\n        } else {\r\n            keyClasses.push(classes.grayKey);\r\n            borderColor = \"#777777\";\r\n        }\r\n    }\r\n\r\n    if (width === undefined) {\r\n        keyWidth = \"50px\";\r\n    } else {\r\n        keyWidth = width;\r\n    }\r\n\r\n    if ('FfJj'.includes(char)) {\r\n        hasMarker = true;\r\n    } else {\r\n        hasMarker = false;\r\n    }\r\n\r\n    if (hasMarker) {\r\n        keyMarkerClass = classes.marker;\r\n    } else {\r\n        keyMarkerClass = classes.hide;\r\n    }\r\n\r\n    let transitionTime;\r\n\r\n    if (updateTime > 150) {\r\n        transitionTime = Math.sqrt(updateTime) / 100;\r\n    } else {\r\n        transitionTime = \"none\";\r\n    }\r\n\r\n    let topLeft = \"\", \r\n        topRight = \"\",\r\n        bottomLeft = \"\", \r\n        bottomRight = \"\";\r\n\r\n    if (\"0123456789<,.-§¨'\".includes(char)) {\r\n        bottomLeft = char;\r\n        topLeft = shiftChar;\r\n        bottomRight = altChar;\r\n    } else {\r\n        topLeft = char;\r\n        bottomLeft = shiftChar; // Måste lösa detta, bara stora bokstäver ska synas på tangentbordet\r\n        bottomRight = altChar;\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={keyClasses.join(\" \")}\r\n            style={{\r\n                \"width\": keyWidth,\r\n                \"transition\": transitionTime\r\n            }}\r\n            onMouseEnter={() => keyEnter(finger)}\r\n            onMouseLeave={() => keyLeave()}\r\n        >\r\n            {\r\n                keyWidth !== \"50px\"\r\n                  ? <div>{char}</div>\r\n                  : <div>\r\n                        <div className={classes.topRow}>\r\n                            {topLeft === \"\" ? <div></div> : <div>{topLeft}</div>}\r\n                            {topRight === \"\" ? <div></div> : <div>{topRight}</div>}\r\n                        </div>\r\n                        <div className={classes.bottomRow}>\r\n                            {bottomLeft === \"\" ? <div></div> : <div>{bottomLeft}</div>}\r\n                            {bottomRight === \"\" ? <div></div> : <div>{bottomRight}</div>}\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div \r\n                className={keyMarkerClass}\r\n                style={{\r\n                    \"backgroundColor\": borderColor\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Key;",{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":109,"column":5,"nodeType":"251","endLine":109,"endColumn":36,"suggestions":"252"},{"ruleId":"249","severity":1,"message":"253","line":50,"column":5,"nodeType":"251","endLine":50,"endColumn":21,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"259","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":14},{"ruleId":"255","severity":1,"message":"260","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":23},{"ruleId":"255","severity":1,"message":"261","line":6,"column":8,"nodeType":"257","messageId":"258","endLine":6,"endColumn":31},{"ruleId":"255","severity":1,"message":"262","line":8,"column":8,"nodeType":"257","messageId":"258","endLine":8,"endColumn":18},{"ruleId":"255","severity":1,"message":"263","line":12,"column":8,"nodeType":"257","messageId":"258","endLine":12,"endColumn":21},{"ruleId":"255","severity":1,"message":"264","line":14,"column":8,"nodeType":"257","messageId":"258","endLine":14,"endColumn":27},{"ruleId":"255","severity":1,"message":"256","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"255","severity":1,"message":"260","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":23},{"ruleId":"255","severity":1,"message":"261","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":31},{"ruleId":"255","severity":1,"message":"262","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":18},{"ruleId":"255","severity":1,"message":"265","line":10,"column":9,"nodeType":"257","messageId":"258","endLine":10,"endColumn":20},{"ruleId":"255","severity":1,"message":"266","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":15},{"ruleId":"255","severity":1,"message":"267","line":10,"column":26,"nodeType":"257","messageId":"258","endLine":10,"endColumn":41},{"ruleId":"255","severity":1,"message":"266","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":15},{"ruleId":"249","severity":1,"message":"268","line":37,"column":5,"nodeType":"251","endLine":37,"endColumn":21,"suggestions":"269"},{"ruleId":"255","severity":1,"message":"270","line":28,"column":9,"nodeType":"257","messageId":"258","endLine":28,"endColumn":19},{"ruleId":"255","severity":1,"message":"271","line":28,"column":21,"nodeType":"257","messageId":"258","endLine":28,"endColumn":34},{"ruleId":"255","severity":1,"message":"272","line":83,"column":8,"nodeType":"257","messageId":"258","endLine":83,"endColumn":19},{"ruleId":"249","severity":1,"message":"273","line":98,"column":5,"nodeType":"251","endLine":98,"endColumn":7,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":12,"column":20,"nodeType":"277","endLine":17,"endColumn":11},{"ruleId":"275","severity":1,"message":"276","line":19,"column":20,"nodeType":"277","endLine":24,"endColumn":11},{"ruleId":"275","severity":1,"message":"276","line":10,"column":5,"nodeType":"277","endLine":10,"endColumn":29},{"ruleId":"255","severity":1,"message":"278","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":16},{"ruleId":"279","severity":1,"message":"280","line":10,"column":20,"nodeType":"281","messageId":"282","endLine":10,"endColumn":22},{"ruleId":"279","severity":1,"message":"280","line":12,"column":27,"nodeType":"281","messageId":"282","endLine":12,"endColumn":29},{"ruleId":"279","severity":1,"message":"280","line":9,"column":20,"nodeType":"281","messageId":"282","endLine":9,"endColumn":22},{"ruleId":"279","severity":1,"message":"280","line":11,"column":27,"nodeType":"281","messageId":"282","endLine":11,"endColumn":29},{"ruleId":"255","severity":1,"message":"266","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":15},{"ruleId":"275","severity":1,"message":"276","line":55,"column":13,"nodeType":"277","endLine":55,"endColumn":39},{"ruleId":"275","severity":1,"message":"276","line":56,"column":13,"nodeType":"277","endLine":56,"endColumn":38},{"ruleId":"255","severity":1,"message":"266","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":15},{"ruleId":"255","severity":1,"message":"283","line":17,"column":9,"nodeType":"257","messageId":"258","endLine":17,"endColumn":16},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'updateTime' and 'welcomeText'. Either include them or remove the dependency array. You can also do a functional update 'setWelcomeText(w => ...)' if you only need 'welcomeText' in the 'setWelcomeText' call.","ArrayExpression",["286"],"React Hook useEffect has missing dependencies: 'headerText' and 'updateTime'. Either include them or remove the dependency array. You can also do a functional update 'setHeaderText(h => ...)' if you only need 'headerText' in the 'setHeaderText' call.",["287"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'SWLogo' is defined but never used.","'findStopsInText' is defined but never used.","'wordsPerMinToUpdateTime' is defined but never used.","'TextMarker' is defined but never used.","'UsernameInput' is defined but never used.","'RepeatPasswordInput' is defined but never used.","'showContent' is assigned a value but never used.","'classes' is defined but never used.","'setUserLoggedIn' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentHeaderText', 'headerText', 'showContentHandler', and 'updateTime'. Either include them or remove the dependency array. If 'showContentHandler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["288"],"'activeKeys' is assigned a value but never used.","'setActiveKeys' is assigned a value but never used.","'activateKey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleMutate' and 'handleResize'. Either include them or remove the dependency array.",["289"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Checkbox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'BGColor' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},"Update the dependencies array to be: [charIdx, stops, playAnimation, updateTime, welcomeText]",{"range":"298","text":"299"},"Update the dependencies array to be: [charIdx, headerText, stops, updateTime]",{"range":"300","text":"301"},"Update the dependencies array to be: [charIdx, currentHeaderText, headerText, showContentHandler, stops, updateTime]",{"range":"302","text":"303"},"Update the dependencies array to be: [handleMutate, handleResize]",{"range":"304","text":"305"},[3089,3120],"[charIdx, stops, playAnimation, updateTime, welcomeText]",[1910,1926],"[charIdx, headerText, stops, updateTime]",[1228,1244],"[charIdx, currentHeaderText, headerText, showContentHandler, stops, updateTime]",[2837,2839],"[handleMutate, handleResize]"]